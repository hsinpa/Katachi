{
  "version": 3,
  "sources": ["../../docs/_snowpack/pkg/common/quat-c94c670f.js", "../../docs/_snowpack/pkg/gl-matrix.js", "../../docs/dist/Sample/Input/KeycodeTable.js", "../../docs/dist/Sample/Input/InputHandler.js", "../../docs/dist/Sample/StaticValues.js", "../../docs/dist/Sample/DemoSceneLoader.js", "../../docs/dist/Sample/KatachiBasicDemo.js", "../../docs/dist/Katachi/WebGL/WebglCanvas.js", "../../docs/_snowpack/pkg/typescript-collections.js", "../../docs/dist/Katachi/Utility/UtilityMethod.js", "../../docs/dist/Katachi/WebGL/WebglResource.js", "../../docs/dist/Katachi/Component/Material/Material.js", "../../docs/dist/Katachi/Component/Material/MaterialManager.js", "../../docs/dist/Katachi/Component/Mesh/Mesh.js", "../../docs/dist/Katachi/Component/Mesh/Primitive/Quad.js", "../../docs/dist/Katachi/Component/Mesh/Primitive/Cube.js", "../../docs/dist/Katachi/Component/Mesh/Primitive/Null.js", "../../docs/dist/Katachi/Utility/KatachiStringSet.js", "../../docs/dist/Katachi/Component/Mesh/MeshManager.js", "../../docs/dist/Katachi/Component/Material/MaterialTypes.js", "../../docs/dist/Katachi/Component/Material/MaterialHelper.js", "../../docs/dist/Katachi/Component/Transform/TransformStatic.js", "../../docs/dist/Katachi/Component/Transform/TransformVector.js", "../../docs/dist/Katachi/Component/Transform/Transform.js", "../../docs/dist/Katachi/Component/Object.js", "../../docs/dist/Katachi/Component/Shape/ShapeObject.js", "../../docs/dist/Katachi/Component/Shape/GLTFShapeObject.js", "../../docs/_snowpack/pkg/webgl-gltf.js", "../../docs/dist/Katachi/Component/AssetImporter/GLTFImporter.js", "../../docs/dist/Katachi/Component/Shape/ShapeBuilder.js", "../../docs/dist/Katachi/Component/Projection.js", "../../docs/dist/Katachi/Component/Camera/Camera.js", "../../docs/dist/Katachi/Component/Light/DirectionLight.js", "../../docs/dist/Katachi/Component/Light/Light.js", "../../docs/dist/Katachi/Component/Scene.js", "../../docs/dist/Katachi/WebGL/WebGLDepthBuffer.js", "../../docs/dist/Katachi/Katachi.js", "../../docs/dist/index.js"],
  "sourcesContent": ["/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(9);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction create$1() {\n  var out = new ARRAY_TYPE(16);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\nvar mat4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create$1,\n  clone: clone,\n  copy: copy,\n  fromValues: fromValues,\n  set: set,\n  identity: identity,\n  transpose: transpose,\n  invert: invert,\n  adjoint: adjoint,\n  determinant: determinant,\n  multiply: multiply,\n  translate: translate,\n  scale: scale,\n  rotate: rotate,\n  rotateX: rotateX,\n  rotateY: rotateY,\n  rotateZ: rotateZ,\n  fromTranslation: fromTranslation,\n  fromScaling: fromScaling,\n  fromRotation: fromRotation,\n  fromXRotation: fromXRotation,\n  fromYRotation: fromYRotation,\n  fromZRotation: fromZRotation,\n  fromRotationTranslation: fromRotationTranslation,\n  fromQuat2: fromQuat2,\n  getTranslation: getTranslation,\n  getScaling: getScaling,\n  getRotation: getRotation,\n  fromRotationTranslationScale: fromRotationTranslationScale,\n  fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,\n  fromQuat: fromQuat,\n  frustum: frustum,\n  perspective: perspective,\n  perspectiveFromFieldOfView: perspectiveFromFieldOfView,\n  ortho: ortho,\n  lookAt: lookAt,\n  targetTo: targetTo,\n  str: str,\n  frob: frob,\n  add: add,\n  subtract: subtract,\n  multiplyScalar: multiplyScalar,\n  multiplyScalarAndAdd: multiplyScalarAndAdd,\n  exactEquals: exactEquals,\n  equals: equals,\n  mul: mul,\n  sub: sub\n});\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction create$2() {\n  var out = new ARRAY_TYPE(3);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction clone$1(a) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction fromValues$1(x, y, z) {\n  var out = new ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nfunction copy$1(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nfunction set$1(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction add$1(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction subtract$1(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction multiply$1(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nfunction scale$1(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  var z = RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nfunction rotateX$1(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nfunction rotateY$1(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ$1(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str$1(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals$1(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals$1(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nvar sub$1 = subtract$1;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nvar mul$1 = multiply$1;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create$2();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\nvar vec3 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create$2,\n  clone: clone$1,\n  length: length,\n  fromValues: fromValues$1,\n  copy: copy$1,\n  set: set$1,\n  add: add$1,\n  subtract: subtract$1,\n  multiply: multiply$1,\n  divide: divide,\n  ceil: ceil,\n  floor: floor,\n  min: min,\n  max: max,\n  round: round,\n  scale: scale$1,\n  scaleAndAdd: scaleAndAdd,\n  distance: distance,\n  squaredDistance: squaredDistance,\n  squaredLength: squaredLength,\n  negate: negate,\n  inverse: inverse,\n  normalize: normalize,\n  dot: dot,\n  cross: cross,\n  lerp: lerp,\n  hermite: hermite,\n  bezier: bezier,\n  random: random,\n  transformMat4: transformMat4,\n  transformMat3: transformMat3,\n  transformQuat: transformQuat,\n  rotateX: rotateX$1,\n  rotateY: rotateY$1,\n  rotateZ: rotateZ$1,\n  angle: angle,\n  zero: zero,\n  str: str$1,\n  exactEquals: exactEquals$1,\n  equals: equals$1,\n  sub: sub$1,\n  mul: mul$1,\n  div: div,\n  dist: dist,\n  sqrDist: sqrDist,\n  len: len,\n  sqrLen: sqrLen,\n  forEach: forEach\n});\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction create$3() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction clone$2(a) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction fromValues$2(x, y, z, w) {\n  var out = new ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nfunction copy$2(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nfunction set$2(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction add$2(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction subtract$2(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction multiply$2(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction divide$1(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nfunction ceil$1(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nfunction floor$1(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction min$1(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction max$1(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nfunction round$1(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nfunction scale$2(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nfunction scaleAndAdd$1(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance$1(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length$1(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {ReadonlyVec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength$1(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nfunction negate$1(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nfunction inverse$1(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nfunction normalize$1(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot$1(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {ReadonlyVec4} result the receiving vector\r\n * @param {ReadonlyVec4} U the first vector\r\n * @param {ReadonlyVec4} V the second vector\r\n * @param {ReadonlyVec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nfunction cross$1(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the first operand\r\n * @param {ReadonlyVec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp$1(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nfunction random$1(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = RANDOM() * 2 - 1;\n    v2 = RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = RANDOM() * 2 - 1;\n    v4 = RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformMat4$1(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {ReadonlyVec4} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformQuat$1(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nfunction zero$1(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str$2(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals$2(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec4} a The first vector.\r\n * @param {ReadonlyVec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals$2(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nvar sub$2 = subtract$2;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nvar mul$2 = multiply$2;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nvar div$1 = divide$1;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nvar dist$1 = distance$1;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist$1 = squaredDistance$1;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nvar len$1 = length$1;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen$1 = squaredLength$1;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach$1 = function () {\n  var vec = create$3();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\nvar vec4 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create$3,\n  clone: clone$2,\n  fromValues: fromValues$2,\n  copy: copy$2,\n  set: set$2,\n  add: add$2,\n  subtract: subtract$2,\n  multiply: multiply$2,\n  divide: divide$1,\n  ceil: ceil$1,\n  floor: floor$1,\n  min: min$1,\n  max: max$1,\n  round: round$1,\n  scale: scale$2,\n  scaleAndAdd: scaleAndAdd$1,\n  distance: distance$1,\n  squaredDistance: squaredDistance$1,\n  length: length$1,\n  squaredLength: squaredLength$1,\n  negate: negate$1,\n  inverse: inverse$1,\n  normalize: normalize$1,\n  dot: dot$1,\n  cross: cross$1,\n  lerp: lerp$1,\n  random: random$1,\n  transformMat4: transformMat4$1,\n  transformQuat: transformQuat$1,\n  zero: zero$1,\n  str: str$2,\n  exactEquals: exactEquals$2,\n  equals: equals$2,\n  sub: sub$2,\n  mul: mul$2,\n  div: div$1,\n  dist: dist$1,\n  sqrDist: sqrDist$1,\n  len: len$1,\n  sqrLen: sqrLen$1,\n  forEach: forEach$1\n});\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nfunction create$4() {\n  var out = new ARRAY_TYPE(4);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction identity$1(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyVec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {ReadonlyQuat} a     Origin unit quaternion\r\n * @param  {ReadonlyQuat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot$2(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n */\n\nfunction multiply$3(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateX$2(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateY$2(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {ReadonlyQuat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateZ$2(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale$3(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction random$2(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = RANDOM();\n  var u2 = RANDOM();\n  var u3 = RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nfunction invert$1(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyMat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {ReadonlyQuat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str$3(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {ReadonlyQuat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar clone$3 = clone$2;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar fromValues$3 = fromValues$2;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar copy$3 = copy$2;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar set$3 = set$2;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar add$3 = add$2;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nvar mul$3 = multiply$3;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {ReadonlyQuat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar scale$3 = scale$2;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot$2 = dot$1;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar lerp$2 = lerp$1;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nvar length$2 = length$1;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nvar len$2 = length$2;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {ReadonlyQuat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength$2 = squaredLength$1;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen$2 = squaredLength$2;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar normalize$2 = normalize$1;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyQuat} a The first quaternion.\r\n * @param {ReadonlyQuat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar exactEquals$3 = exactEquals$2;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyQuat} a The first vector.\r\n * @param {ReadonlyQuat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar equals$3 = equals$2;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {ReadonlyVec3} a the initial vector\r\n * @param {ReadonlyVec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = create$2();\n  var xUnitVec3 = fromValues$1(1, 0, 0);\n  var yUnitVec3 = fromValues$1(0, 1, 0);\n  return function (out, a, b) {\n    var dot$1 = dot(a, b);\n\n    if (dot$1 < -0.999999) {\n      cross(tmpvec3, xUnitVec3, a);\n      if (len(tmpvec3) < 0.000001) cross(tmpvec3, yUnitVec3, a);\n      normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot$1 > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot$1;\n      return normalize$2(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {ReadonlyQuat} a the first operand\r\n * @param {ReadonlyQuat} b the second operand\r\n * @param {ReadonlyQuat} c the third operand\r\n * @param {ReadonlyQuat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nvar sqlerp = function () {\n  var temp1 = create$4();\n  var temp2 = create$4();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\r\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\r\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nvar setAxes = function () {\n  var matr = create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize$2(out, fromMat3(out, matr));\n  };\n}();\n\nvar quat = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create$4,\n  identity: identity$1,\n  setAxisAngle: setAxisAngle,\n  getAxisAngle: getAxisAngle,\n  getAngle: getAngle,\n  multiply: multiply$3,\n  rotateX: rotateX$2,\n  rotateY: rotateY$2,\n  rotateZ: rotateZ$2,\n  calculateW: calculateW,\n  exp: exp,\n  ln: ln,\n  pow: pow,\n  slerp: slerp,\n  random: random$2,\n  invert: invert$1,\n  conjugate: conjugate,\n  fromMat3: fromMat3,\n  fromEuler: fromEuler,\n  str: str$3,\n  clone: clone$3,\n  fromValues: fromValues$3,\n  copy: copy$3,\n  set: set$3,\n  add: add$3,\n  mul: mul$3,\n  scale: scale$3,\n  dot: dot$2,\n  lerp: lerp$2,\n  length: length$2,\n  len: len$2,\n  squaredLength: squaredLength$2,\n  sqrLen: sqrLen$2,\n  normalize: normalize$2,\n  exactEquals: exactEquals$3,\n  equals: equals$3,\n  rotationTo: rotationTo,\n  sqlerp: sqlerp,\n  setAxes: setAxes\n});\n\nexport { ARRAY_TYPE as A, EPSILON as E, RANDOM as R, vec4 as a, fromQuat as b, create$1 as c, fromValues$3 as d, multiply as e, fromValues as f, fromValues$2 as g, fromValues$1 as h, slerp as i, create$2 as j, create$4 as k, lerp as l, mat4 as m, clone as n, quat as q, scale as s, translate as t, vec3 as v };\n", "import { A as ARRAY_TYPE, E as EPSILON, R as RANDOM } from './common/quat-c94c670f.js';\nexport { m as mat4, q as quat, v as vec3, a as vec4 } from './common/quat-c94c670f.js';\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new ARRAY_TYPE(2);\n\n  if (ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\nvar vec2 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  create: create,\n  clone: clone,\n  fromValues: fromValues,\n  copy: copy,\n  set: set,\n  add: add,\n  subtract: subtract,\n  multiply: multiply,\n  divide: divide,\n  ceil: ceil,\n  floor: floor,\n  min: min,\n  max: max,\n  round: round,\n  scale: scale,\n  scaleAndAdd: scaleAndAdd,\n  distance: distance,\n  squaredDistance: squaredDistance,\n  length: length,\n  squaredLength: squaredLength,\n  negate: negate,\n  inverse: inverse,\n  normalize: normalize,\n  dot: dot,\n  cross: cross,\n  lerp: lerp,\n  random: random,\n  transformMat2: transformMat2,\n  transformMat2d: transformMat2d,\n  transformMat3: transformMat3,\n  transformMat4: transformMat4,\n  rotate: rotate,\n  angle: angle,\n  zero: zero,\n  str: str,\n  exactEquals: exactEquals,\n  equals: equals,\n  len: len,\n  sub: sub,\n  mul: mul,\n  div: div,\n  dist: dist,\n  sqrDist: sqrDist,\n  sqrLen: sqrLen,\n  forEach: forEach\n});\n\nexport { vec2 };\n", "export const InputEventTitle = Object.freeze({\n  up: \"up\",\n  down: \"down\",\n  left: \"left\",\n  right: \"right\"\n});\nexport const KeycodeLookupTable = Object.create({\n  w: InputEventTitle.up,\n  s: InputEventTitle.down,\n  d: InputEventTitle.right,\n  a: InputEventTitle.left,\n  ArrowUp: InputEventTitle.up,\n  ArrowDown: InputEventTitle.down,\n  ArrowRight: InputEventTitle.right,\n  ArrowLeft: InputEventTitle.left\n});\n", "import {vec2} from \"../../../_snowpack/pkg/gl-matrix.js\";\nimport {KeycodeLookupTable, InputEventTitle} from \"./KeycodeTable.js\";\nexport const InputMovementType = Object.freeze({\n  Up: vec2.fromValues(0, 1),\n  Down: vec2.fromValues(0, -1),\n  Left: vec2.fromValues(-1, 0),\n  Right: vec2.fromValues(1, 0),\n  Center: vec2.fromValues(0, 0)\n});\nclass InputHandler {\n  constructor() {\n    this._buttonState = Object.create({});\n    this._cacheKeyboardDirection = vec2.create();\n  }\n  GetButtonState(actionName) {\n    return false;\n  }\n  RegisterButtonEvent(callback) {\n    window.addEventListener(\"click\", (e) => {\n      callback();\n    });\n  }\n  RegisterMouseMovement(canvasDom, callback) {\n    canvasDom.requestPointerLock();\n    let deltaArray = [0, 0];\n    window.addEventListener(\"mousemove\", (e) => {\n      deltaArray[0] = e.movementX;\n      deltaArray[1] = e.movementY;\n      callback(deltaArray);\n    });\n  }\n  RegisterMovementEvent(callback) {\n    let self = this;\n    this._keyboardCallback = callback;\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key in KeycodeLookupTable) {\n        this.SetKeyboardState(KeycodeLookupTable[e.key], true);\n      }\n    });\n    window.addEventListener(\"keyup\", (e) => {\n      if (e.key in KeycodeLookupTable)\n        this.SetKeyboardState(KeycodeLookupTable[e.key], false);\n    });\n  }\n  OnUpdate() {\n    this._cacheKeyboardDirection[0] = 0;\n    this._cacheKeyboardDirection[1] = 0;\n    if (this._buttonState.hasOwnProperty(InputEventTitle.left)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Left);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.down)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Down);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.right)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Right);\n    }\n    if (this._buttonState.hasOwnProperty(InputEventTitle.up)) {\n      vec2.add(this._cacheKeyboardDirection, this._cacheKeyboardDirection, InputMovementType.Up);\n    }\n    this._keyboardCallback(this._cacheKeyboardDirection);\n  }\n  SetKeyboardState(keyCode, state) {\n    if (state)\n      this._buttonState[keyCode] = true;\n    else\n      delete this._buttonState[keyCode];\n  }\n}\nexport default InputHandler;\n", "export const DeltaTime = 0.02;\n", "export default class DemoSceneLoader {\n  constructor() {\n    this.gltfCache = {};\n  }\n  async LoadGLTFContent(katachi, sceneJsonConfig) {\n    let gltfPromiseArray = sceneJsonConfig.gltf.map((x) => katachi.shapeBuilder.BuildGLTFShape(x.id, x.path));\n    let self = this;\n    let gltfCount = sceneJsonConfig.gltf.length;\n    for (let i = 0; i < gltfCount; i++) {\n      let gltfModel = await gltfPromiseArray[i];\n      self.SetGLTFToConfigLayout(katachi, sceneJsonConfig.gltf[i], gltfModel);\n    }\n  }\n  GetGLTFShapeObject(id) {\n    if (this.gltfCache.hasOwnProperty(id)) {\n      return this.gltfCache[id];\n    }\n    return null;\n  }\n  ClearUp() {\n    this.gltfCache = {};\n  }\n  SetGLTFToConfigLayout(katachi, gltfMarkup, shapeObject) {\n    this.gltfCache[gltfMarkup.id] = shapeObject;\n    let parentObject = this.GetGLTFShapeObject(gltfMarkup.parent_id);\n    shapeObject.transform.Scale(gltfMarkup.scale);\n    shapeObject.transform.SetEuler(gltfMarkup.orientation[0], gltfMarkup.orientation[1], gltfMarkup.orientation[2]);\n    shapeObject.transform.SetPosition(gltfMarkup.position[0], gltfMarkup.position[1], gltfMarkup.position[2]);\n    katachi.scene.AddShapeObj(shapeObject);\n    if (parentObject != null)\n      katachi.scene.SetParent(parentObject, shapeObject);\n  }\n}\n", "import InputHandler from \"./Input/InputHandler.js\";\nimport {DeltaTime} from \"./StaticValues.js\";\nimport DemoSceneLoader from \"./DemoSceneLoader.js\";\nclass KatachiBasicDemo {\n  constructor() {\n    this.inputHandler = new InputHandler();\n    this.inputHandler.RegisterMovementEvent(this.OnMovementEvent.bind(this));\n    this.inputHandler.RegisterButtonEvent(this.OnMouseClickEvent.bind(this));\n    this.sceneLoader = new DemoSceneLoader();\n  }\n  async SetUp(katachi, sceneLayoutType) {\n    this.katachi = katachi;\n    this.katachiIsReady = await katachi.SetUp(this.UpdateLoop.bind(this));\n    let canvasDom = document.querySelector(\"#webgl_canvas\");\n    if (this.katachiIsReady) {\n      this.inputHandler.RegisterMouseMovement(canvasDom, this.OnMouseEvent.bind(this));\n      this.sceneLoader.LoadGLTFContent(katachi, sceneLayoutType);\n      this.mainQuad = katachi.shapeBuilder.BuildQuad();\n      this.mainCube = katachi.shapeBuilder.BuildCube();\n      this.mainCubeTwo = katachi.shapeBuilder.BuildCube();\n      this.mainQuad.transform.SetPosition(-1.2, 0, -1);\n      this.mainQuad.transform.Scale(0.2);\n      this.mainCube.transform.SetPosition(0, 0, -2);\n      this.mainCube.transform.Scale(0.5);\n      this.mainCubeTwo.transform.Scale(0.2);\n      katachi.scene.SetParent(this.mainCube, this.mainCubeTwo);\n      katachi.scene.AddShapeObj(this.mainCube);\n      katachi.scene.AddShapeObj(this.mainQuad);\n      katachi.scene.AddShapeObj(this.mainCubeTwo);\n      this.katachi.materialManager.LoadTextureToObject(this.mainQuad, \"u_mainTex\", \"./texture/BrickTex_256.jpg\");\n      this.katachi.materialManager.LoadTextureToObject(this.mainCube, \"u_mainTex\", \"./texture/Personal_01.png\");\n      this.mainCube.SetCustomUniformAttr(\"u_mainColor\", {value: [1, 1, 1, 1], isMatrix: false, function: this.katachi.webglContext.uniform4fv});\n      this.mainQuad.SetCustomUniformAttr(\"u_mainColor\", {value: [0, 0, 1, 1], isMatrix: false, function: this.katachi.webglContext.uniform4fv});\n    }\n  }\n  OnMovementEvent(direction) {\n    if (!this.katachiIsReady)\n      return;\n    let deltaTime = 0.02;\n    let speed = deltaTime;\n    this.katachi.scene.camera.transform.Translate(-direction[0] * speed, 0, direction[1] * speed);\n  }\n  OnMouseEvent(moveDelta) {\n    const mouseSpeed = 0.3;\n    let cameraRot = this.katachi.scene.camera.transform.rotation;\n    this.katachi.scene.camera.transform.SetEuler(cameraRot[0] + moveDelta[0] * DeltaTime * mouseSpeed, cameraRot[1] - moveDelta[1] * DeltaTime * mouseSpeed, cameraRot[2]);\n    let rightAngleRadian = 0.5 * Math.PI;\n    if (cameraRot[1] > rightAngleRadian)\n      this.katachi.scene.camera.transform.SetEuler(cameraRot[0], rightAngleRadian, cameraRot[2]);\n    if (this.katachi.scene.camera.transform.rotation[1] < -rightAngleRadian)\n      this.katachi.scene.camera.transform.SetEuler(cameraRot[0], -rightAngleRadian, cameraRot[2]);\n  }\n  OnMouseClickEvent() {\n    let parent = this.mainCubeTwo.transform.parent == null ? this.mainCube.transform : null;\n    console.log(parent);\n    this.mainCubeTwo.transform.SetParent(parent);\n  }\n  UpdateLoop(timeSecond) {\n    this.inputHandler.OnUpdate();\n    if (this.katachi == null || this.mainQuad == null)\n      return;\n    this.mainCube.transform.Rotate(0, 0.01, 0);\n  }\n}\nexport default KatachiBasicDemo;\n", "class WebglCanvas {\n  constructor(configJson) {\n    this.maxDrawBufferSize = 2048;\n    this._configJson = configJson;\n    this._canvasDom = document.querySelector(configJson.canvas_dom_query);\n    this._gl = this._canvasDom.getContext(\"webgl\");\n    this._gl.enable(this._gl.DEPTH_TEST);\n    this.AutoSetCanvasSize();\n    let depth_texture_extension = this._gl.getExtension(\"WEBGL_depth_texture\");\n    if (!depth_texture_extension) {\n      console.log(\"This WebGL program requires the use of the WEBGL_depth_texture extension. This extension is not supported by your browser, so this WEBGL program is terminating.\");\n      return;\n    }\n    window.addEventListener(\"resize\", () => {\n      this.AutoSetCanvasSize();\n    });\n  }\n  get webglContext() {\n    return this._gl;\n  }\n  AutoSetCanvasSize() {\n    this.SetCanvasToSceenSize(this._canvasDom.clientWidth, this._canvasDom.clientHeight);\n  }\n  SetCanvasToSceenSize(displayWidth, displayHeight) {\n    if (displayWidth > this.maxDrawBufferSize || displayHeight > this.maxDrawBufferSize) {\n      displayHeight = displayHeight > displayWidth ? this.maxDrawBufferSize : this.maxDrawBufferSize * displayHeight / displayWidth;\n      displayWidth = displayWidth >= displayHeight ? this.maxDrawBufferSize : this.maxDrawBufferSize * displayWidth / displayHeight;\n    }\n    console.log(displayWidth + \", \" + displayHeight);\n    this._canvasDom.width = displayWidth;\n    this._canvasDom.height = displayHeight;\n  }\n}\nexport default WebglCanvas;\n", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar util = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nexports.has = function (obj, prop) {\n    return _hasOwnProperty.call(obj, prop);\n};\n/**\n * Default function to compare element order.\n * @function\n */\nfunction defaultCompare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a === b) {\n        return 0;\n    }\n    else {\n        return 1;\n    }\n}\nexports.defaultCompare = defaultCompare;\n/**\n * Default function to test equality.\n * @function\n */\nfunction defaultEquals(a, b) {\n    return a === b;\n}\nexports.defaultEquals = defaultEquals;\n/**\n * Default function to convert an object to a string.\n * @function\n */\nfunction defaultToString(item) {\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\nexports.defaultToString = defaultToString;\n/**\n * Joins all the properies of the object using the provided join string\n */\nfunction makeString(item, join) {\n    if (join === void 0) { join = ','; }\n    if (item === null) {\n        return 'COLLECTION_NULL';\n    }\n    else if (isUndefined(item)) {\n        return 'COLLECTION_UNDEFINED';\n    }\n    else if (isString(item)) {\n        return item.toString();\n    }\n    else {\n        var toret = '{';\n        var first = true;\n        for (var prop in item) {\n            if (exports.has(item, prop)) {\n                if (first) {\n                    first = false;\n                }\n                else {\n                    toret = toret + join;\n                }\n                toret = toret + prop + ':' + item[prop];\n            }\n        }\n        return toret + '}';\n    }\n}\nexports.makeString = makeString;\n/**\n * Checks if the given argument is a function.\n * @function\n */\nfunction isFunction(func) {\n    return (typeof func) === 'function';\n}\nexports.isFunction = isFunction;\n/**\n * Checks if the given argument is undefined.\n * @function\n */\nfunction isUndefined(obj) {\n    return (typeof obj) === 'undefined';\n}\nexports.isUndefined = isUndefined;\n/**\n * Checks if the given argument is a string.\n * @function\n */\nfunction isString(obj) {\n    return Object.prototype.toString.call(obj) === '[object String]';\n}\nexports.isString = isString;\n/**\n * Reverses a compare function.\n * @function\n */\nfunction reverseCompareFunction(compareFunction) {\n    if (isUndefined(compareFunction) || !isFunction(compareFunction)) {\n        return function (a, b) {\n            if (a < b) {\n                return 1;\n            }\n            else if (a === b) {\n                return 0;\n            }\n            else {\n                return -1;\n            }\n        };\n    }\n    else {\n        return function (d, v) {\n            return compareFunction(d, v) * -1;\n        };\n    }\n}\nexports.reverseCompareFunction = reverseCompareFunction;\n/**\n * Returns an equal function given a compare function.\n * @function\n */\nfunction compareToEquals(compareFunction) {\n    return function (a, b) {\n        return compareFunction(a, b) === 0;\n    };\n}\nexports.compareToEquals = compareToEquals;\n\n});\n\nvar arrays = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Returns the position of the first occurrence of the specified item\n * within the specified array.4\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the first occurrence of the specified element\n * within the specified array, or -1 if not found.\n */\nfunction indexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.indexOf = indexOf;\n/**\n * Returns the position of the last occurrence of the specified element\n * within the specified array.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the position of the last occurrence of the specified element\n * within the specified array or -1 if not found.\n */\nfunction lastIndexOf(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    for (var i = length - 1; i >= 0; i--) {\n        if (equals(array[i], item)) {\n            return i;\n        }\n    }\n    return -1;\n}\nexports.lastIndexOf = lastIndexOf;\n/**\n * Returns true if the specified array contains the specified element.\n * @param {*} array the array in which to search the element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the specified array contains the specified element.\n */\nfunction contains(array, item, equalsFunction) {\n    return indexOf(array, item, equalsFunction) >= 0;\n}\nexports.contains = contains;\n/**\n * Removes the first ocurrence of the specified element from the specified array.\n * @param {*} array the array in which to search element.\n * @param {Object} item the element to search.\n * @param {function(Object,Object):boolean=} equalsFunction optional function to\n * check equality between 2 elements.\n * @return {boolean} true if the array changed after this call.\n */\nfunction remove(array, item, equalsFunction) {\n    var index = indexOf(array, item, equalsFunction);\n    if (index < 0) {\n        return false;\n    }\n    array.splice(index, 1);\n    return true;\n}\nexports.remove = remove;\n/**\n * Returns the number of elements in the specified array equal\n * to the specified object.\n * @param {Array} array the array in which to determine the frequency of the element.\n * @param {Object} item the element whose frequency is to be determined.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between 2 elements.\n * @return {number} the number of elements in the specified array\n * equal to the specified object.\n */\nfunction frequency(array, item, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    var length = array.length;\n    var freq = 0;\n    for (var i = 0; i < length; i++) {\n        if (equals(array[i], item)) {\n            freq++;\n        }\n    }\n    return freq;\n}\nexports.frequency = frequency;\n/**\n * Returns true if the two specified arrays are equal to one another.\n * Two arrays are considered equal if both arrays contain the same number\n * of elements, and all corresponding pairs of elements in the two\n * arrays are equal and are in the same order.\n * @param {Array} array1 one array to be tested for equality.\n * @param {Array} array2 the other array to be tested for equality.\n * @param {function(Object,Object):boolean=} equalsFunction optional function used to\n * check equality between elemements in the arrays.\n * @return {boolean} true if the two arrays are equal\n */\nfunction equals(array1, array2, equalsFunction) {\n    var equals = equalsFunction || util.defaultEquals;\n    if (array1.length !== array2.length) {\n        return false;\n    }\n    var length = array1.length;\n    for (var i = 0; i < length; i++) {\n        if (!equals(array1[i], array2[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equals = equals;\n/**\n * Returns shallow a copy of the specified array.\n * @param {*} array the array to copy.\n * @return {Array} a copy of the specified array\n */\nfunction copy(array) {\n    return array.concat();\n}\nexports.copy = copy;\n/**\n * Swaps the elements at the specified positions in the specified array.\n * @param {Array} array The array in which to swap elements.\n * @param {number} i the index of one element to be swapped.\n * @param {number} j the index of the other element to be swapped.\n * @return {boolean} true if the array is defined and the indexes are valid.\n */\nfunction swap(array, i, j) {\n    if (i < 0 || i >= array.length || j < 0 || j >= array.length) {\n        return false;\n    }\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n    return true;\n}\nexports.swap = swap;\nfunction toString(array) {\n    return '[' + array.toString() + ']';\n}\nexports.toString = toString;\n/**\n * Executes the provided function once for each element present in this array\n * starting from index 0 to length - 1.\n * @param {Array} array The array in which to iterate.\n * @param {function(Object):*} callback function to execute, it is\n * invoked with one argument: the element value, to break the iteration you can\n * optionally return false.\n */\nfunction forEach(array, callback) {\n    for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\n        var ele = array_1[_i];\n        if (callback(ele) === false) {\n            return;\n        }\n    }\n}\nexports.forEach = forEach;\n\n});\n\nvar Dictionary_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Dictionary = /** @class */ (function () {\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function Dictionary(toStrFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStrFunction || util.defaultToString;\n    }\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (util.isUndefined(pair)) {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (util.isUndefined(previousElement)) {\n            this.nElements++;\n            ret = undefined;\n        }\n        else {\n            ret = previousElement.value;\n        }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        if (!util.isUndefined(previousElement)) {\n            delete this.table[k];\n            this.nElements--;\n            return previousElement.value;\n        }\n        return undefined;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    Dictionary.prototype.keys = function () {\n        var array = [];\n        for (var name_1 in this.table) {\n            if (util.has(this.table, name_1)) {\n                var pair = this.table[name_1];\n                array.push(pair.key);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    Dictionary.prototype.values = function () {\n        var array = [];\n        for (var name_2 in this.table) {\n            if (util.has(this.table, name_2)) {\n                var pair = this.table[name_2];\n                array.push(pair.value);\n            }\n        }\n        return array;\n    };\n    /**\n     * Executes the provided function once for each key-value pair\n     * present in this dictionary.\n     * @param {function(Object,Object):*} callback function to execute, it is\n     * invoked with two arguments: key and value. To break the iteration you can\n     * optionally return false.\n     */\n    Dictionary.prototype.forEach = function (callback) {\n        for (var name_3 in this.table) {\n            if (util.has(this.table, name_3)) {\n                var pair = this.table[name_3];\n                var ret = callback(pair.key, pair.value);\n                if (ret === false) {\n                    return;\n                }\n            }\n        }\n    };\n    /**\n     * Returns true if this dictionary contains a mapping for the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary contains a mapping for the\n     * specified key.\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        return !util.isUndefined(this.getValue(key));\n    };\n    /**\n     * Removes all mappings from this dictionary.\n     * @this {collections.Dictionary}\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    Dictionary.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    Dictionary.prototype.toString = function () {\n        var toret = '{';\n        this.forEach(function (k, v) {\n            toret += \"\\n\\t\" + k + \" : \" + v;\n        });\n        return toret + '\\n}';\n    };\n    return Dictionary;\n}()); // End of dictionary\nexports.default = Dictionary;\n\n});\n\nvar _Set = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nvar Set = /** @class */ (function () {\n    /**\n     * Creates an empty set.\n     * @class <p>A set is a data structure that contains no duplicate items.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStringFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Set(toStringFunction) {\n        this.dictionary = new Dictionary_1.default(toStringFunction);\n    }\n    /**\n     * Returns true if this set contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this set contains the specified element,\n     * false otherwise.\n     */\n    Set.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n     * Adds the specified element to this set if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this set did not already contain the specified element.\n     */\n    Set.prototype.add = function (element) {\n        if (this.contains(element) || util.isUndefined(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.setValue(element, element);\n            return true;\n        }\n    };\n    /**\n     * Performs an intersection between this and another set.\n     * Removes all values that are not present this set and the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.intersection = function (otherSet) {\n        var set = this;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                set.remove(element);\n            }\n            return true;\n        });\n    };\n    /**\n     * Performs a union between this and another set.\n     * Adds all values from the given set to this set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.union = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.add(element);\n            return true;\n        });\n    };\n    /**\n     * Performs a difference between this and another set.\n     * Removes from this set all the values that are present in the given set.\n     * @param {collections.Set} otherSet other set.\n     */\n    Set.prototype.difference = function (otherSet) {\n        var set = this;\n        otherSet.forEach(function (element) {\n            set.remove(element);\n            return true;\n        });\n    };\n    /**\n     * Checks whether the given set contains all the elements in this set.\n     * @param {collections.Set} otherSet other set.\n     * @return {boolean} true if this set is a subset of the given set.\n     */\n    Set.prototype.isSubsetOf = function (otherSet) {\n        if (this.size() > otherSet.size()) {\n            return false;\n        }\n        var isSub = true;\n        this.forEach(function (element) {\n            if (!otherSet.contains(element)) {\n                isSub = false;\n                return false;\n            }\n            return true;\n        });\n        return isSub;\n    };\n    /**\n     * Removes the specified element from this set if it is present.\n     * @return {boolean} true if this set contained the specified element.\n     */\n    Set.prototype.remove = function (element) {\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            this.dictionary.remove(element);\n            return true;\n        }\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this set.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one arguments: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Set.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            return callback(v);\n        });\n    };\n    /**\n     * Returns an array containing all of the elements in this set in arbitrary order.\n     * @return {Array} an array containing all of the elements in this set.\n     */\n    Set.prototype.toArray = function () {\n        return this.dictionary.values();\n    };\n    /**\n     * Returns true if this set contains no elements.\n     * @return {boolean} true if this set contains no elements.\n     */\n    Set.prototype.isEmpty = function () {\n        return this.dictionary.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this set.\n     * @return {number} the number of elements in this set.\n     */\n    Set.prototype.size = function () {\n        return this.dictionary.size();\n    };\n    /**\n     * Removes all of the elements from this set.\n     */\n    Set.prototype.clear = function () {\n        this.dictionary.clear();\n    };\n    /*\n    * Provides a string representation for display\n    */\n    Set.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    return Set;\n}()); // end of Set\nexports.default = Set;\n\n});\n\nvar Bag_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nvar Bag = /** @class */ (function () {\n    /**\n     * Creates an empty bag.\n     * @class <p>A bag is a special kind of set in which members are\n     * allowed to appear more than once.</p>\n     * <p>If the inserted elements are custom objects a function\n     * which converts elements to unique strings must be provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert elements to strings. If the elements aren't strings or if toString()\n     * is not appropriate, a custom function which receives an object and returns a\n     * unique string must be provided.\n     */\n    function Bag(toStrFunction) {\n        this.toStrF = toStrFunction || util.defaultToString;\n        this.dictionary = new Dictionary_1.default(this.toStrF);\n        this.nElements = 0;\n    }\n    /**\n     * Adds nCopies of the specified object to this bag.\n     * @param {Object} element element to add.\n     * @param {number=} nCopies the number of copies to add, if this argument is\n     * undefined 1 copy is added.\n     * @return {boolean} true unless element is undefined.\n     */\n    Bag.prototype.add = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            var node = {\n                value: element,\n                copies: nCopies\n            };\n            this.dictionary.setValue(element, node);\n        }\n        else {\n            this.dictionary.getValue(element).copies += nCopies;\n        }\n        this.nElements += nCopies;\n        return true;\n    };\n    /**\n     * Counts the number of copies of the specified object in this bag.\n     * @param {Object} element the object to search for..\n     * @return {number} the number of copies of the object, 0 if not found\n     */\n    Bag.prototype.count = function (element) {\n        if (!this.contains(element)) {\n            return 0;\n        }\n        else {\n            return this.dictionary.getValue(element).copies;\n        }\n    };\n    /**\n     * Returns true if this bag contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this bag contains the specified element,\n     * false otherwise.\n     */\n    Bag.prototype.contains = function (element) {\n        return this.dictionary.containsKey(element);\n    };\n    /**\n     * Removes nCopies of the specified object to this bag.\n     * If the number of copies to remove is greater than the actual number\n     * of copies in the Bag, all copies are removed.\n     * @param {Object} element element to remove.\n     * @param {number=} nCopies the number of copies to remove, if this argument is\n     * undefined 1 copy is removed.\n     * @return {boolean} true if at least 1 element was removed.\n     */\n    Bag.prototype.remove = function (element, nCopies) {\n        if (nCopies === void 0) { nCopies = 1; }\n        if (util.isUndefined(element) || nCopies <= 0) {\n            return false;\n        }\n        if (!this.contains(element)) {\n            return false;\n        }\n        else {\n            var node = this.dictionary.getValue(element);\n            if (nCopies > node.copies) {\n                this.nElements -= node.copies;\n            }\n            else {\n                this.nElements -= nCopies;\n            }\n            node.copies -= nCopies;\n            if (node.copies <= 0) {\n                this.dictionary.remove(element);\n            }\n            return true;\n        }\n    };\n    /**\n     * Returns an array containing all of the elements in this big in arbitrary order,\n     * including multiple copies.\n     * @return {Array} an array containing all of the elements in this bag.\n     */\n    Bag.prototype.toArray = function () {\n        var a = [];\n        var values = this.dictionary.values();\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var node = values_1[_i];\n            var element = node.value;\n            var copies = node.copies;\n            for (var j = 0; j < copies; j++) {\n                a.push(element);\n            }\n        }\n        return a;\n    };\n    /**\n     * Returns a set of unique elements in this bag.\n     * @return {collections.Set<T>} a set of unique elements in this bag.\n     */\n    Bag.prototype.toSet = function () {\n        var toret = new _Set.default(this.toStrF);\n        var elements = this.dictionary.values();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var ele = elements_1[_i];\n            var value = ele.value;\n            toret.add(value);\n        }\n        return toret;\n    };\n    /**\n     * Executes the provided function once for each element\n     * present in this bag, including multiple copies.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element. To break the iteration you can\n     * optionally return false.\n     */\n    Bag.prototype.forEach = function (callback) {\n        this.dictionary.forEach(function (k, v) {\n            var value = v.value;\n            var copies = v.copies;\n            for (var i = 0; i < copies; i++) {\n                if (callback(value) === false) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    };\n    /**\n     * Returns the number of elements in this bag.\n     * @return {number} the number of elements in this bag.\n     */\n    Bag.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this bag contains no elements.\n     * @return {boolean} true if this bag contains no elements.\n     */\n    Bag.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Removes all of the elements from this bag.\n     */\n    Bag.prototype.clear = function () {\n        this.nElements = 0;\n        this.dictionary.clear();\n    };\n    return Bag;\n}()); // End of bag\nexports.default = Bag;\n\n});\n\nvar LinkedList_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar LinkedList = /** @class */ (function () {\n    /**\n     * Creates an empty Linked List.\n     * @class A linked list is a data structure consisting of a group of nodes\n     * which together represent a sequence.\n     * @constructor\n     */\n    function LinkedList() {\n        /**\n         * First node in the list\n         * @type {Object}\n         * @private\n         */\n        this.firstNode = null;\n        /**\n         * Last node in the list\n         * @type {Object}\n         * @private\n         */\n        this.lastNode = null;\n        /**\n         * Number of elements in the list\n         * @type {number}\n         * @private\n         */\n        this.nElements = 0;\n    }\n    /**\n     * Adds an element to this list.\n     * @param {Object} item element to be added.\n     * @param {number=} index optional index to add the element. If no index is specified\n     * the element is added to the end of this list.\n     * @return {boolean} true if the element was added or false if the index is invalid\n     * or if the element is undefined.\n     */\n    LinkedList.prototype.add = function (item, index) {\n        if (util.isUndefined(index)) {\n            index = this.nElements;\n        }\n        if (index < 0 || index > this.nElements || util.isUndefined(item)) {\n            return false;\n        }\n        var newNode = this.createNode(item);\n        if (this.nElements === 0 || this.lastNode === null) {\n            // First node in the list.\n            this.firstNode = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === this.nElements) {\n            // Insert at the end.\n            this.lastNode.next = newNode;\n            this.lastNode = newNode;\n        }\n        else if (index === 0) {\n            // Change first node.\n            newNode.next = this.firstNode;\n            this.firstNode = newNode;\n        }\n        else {\n            var prev = this.nodeAtIndex(index - 1);\n            if (prev === null) {\n                return false;\n            }\n            newNode.next = prev.next;\n            prev.next = newNode;\n        }\n        this.nElements++;\n        return true;\n    };\n    /**\n     * Returns the first element in this list.\n     * @return {*} the first element of the list or undefined if the list is\n     * empty.\n     */\n    LinkedList.prototype.first = function () {\n        if (this.firstNode !== null) {\n            return this.firstNode.element;\n        }\n        return undefined;\n    };\n    /**\n     * Returns the last element in this list.\n     * @return {*} the last element in the list or undefined if the list is\n     * empty.\n     */\n    LinkedList.prototype.last = function () {\n        if (this.lastNode !== null) {\n            return this.lastNode.element;\n        }\n        return undefined;\n    };\n    /**\n     * Returns the element at the specified position in this list.\n     * @param {number} index desired index.\n     * @return {*} the element at the given index or undefined if the index is\n     * out of bounds.\n     */\n    LinkedList.prototype.elementAtIndex = function (index) {\n        var node = this.nodeAtIndex(index);\n        if (node === null) {\n            return undefined;\n        }\n        return node.element;\n    };\n    /**\n     * Returns the index in this list of the first occurrence of the\n     * specified element, or -1 if the List does not contain this element.\n     * <p>If the elements inside this list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\n     * function used to check if two elements are equal.\n     * @return {number} the index in this list of the first occurrence\n     * of the specified element, or -1 if this list does not contain the\n     * element.\n     */\n    LinkedList.prototype.indexOf = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (util.isUndefined(item)) {\n            return -1;\n        }\n        var currentNode = this.firstNode;\n        var index = 0;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                return index;\n            }\n            index++;\n            currentNode = currentNode.next;\n        }\n        return -1;\n    };\n    /**\n     * Returns true if this list contains the specified element.\n     * <p>If the elements inside the list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction Optional\n     * function used to check if two elements are equal.\n     * @return {boolean} true if this list contains the specified element, false\n     * otherwise.\n     */\n    LinkedList.prototype.contains = function (item, equalsFunction) {\n        return (this.indexOf(item, equalsFunction) >= 0);\n    };\n    /**\n     * Removes the first occurrence of the specified element in this list.\n     * <p>If the elements inside the list are\n     * not comparable with the === operator a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName = function(pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} item element to be removed from this list, if present.\n     * @return {boolean} true if the list contained the specified element.\n     */\n    LinkedList.prototype.remove = function (item, equalsFunction) {\n        var equalsF = equalsFunction || util.defaultEquals;\n        if (this.nElements < 1 || util.isUndefined(item)) {\n            return false;\n        }\n        var previous = null;\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (equalsF(currentNode.element, item)) {\n                if (previous === null) {\n                    this.firstNode = currentNode.next;\n                    if (currentNode === this.lastNode) {\n                        this.lastNode = null;\n                    }\n                }\n                else if (currentNode === this.lastNode) {\n                    this.lastNode = previous;\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                else {\n                    previous.next = currentNode.next;\n                    currentNode.next = null;\n                }\n                this.nElements--;\n                return true;\n            }\n            previous = currentNode;\n            currentNode = currentNode.next;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this list.\n     */\n    LinkedList.prototype.clear = function () {\n        this.firstNode = null;\n        this.lastNode = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this list is equal to the given list.\n     * Two lists are equal if they have the same elements in the same order.\n     * @param {LinkedList} other the other list.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function used to check if two elements are equal. If the elements in the lists\n     * are custom objects you should provide a function, otherwise\n     * the === operator is used to check equality between elements.\n     * @return {boolean} true if this list is equal to the given list.\n     */\n    LinkedList.prototype.equals = function (other, equalsFunction) {\n        var eqF = equalsFunction || util.defaultEquals;\n        if (!(other instanceof LinkedList)) {\n            return false;\n        }\n        if (this.size() !== other.size()) {\n            return false;\n        }\n        return this.equalsAux(this.firstNode, other.firstNode, eqF);\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.equalsAux = function (n1, n2, eqF) {\n        while (n1 !== null && n2 !== null) {\n            if (!eqF(n1.element, n2.element)) {\n                return false;\n            }\n            n1 = n1.next;\n            n2 = n2.next;\n        }\n        return true;\n    };\n    /**\n     * Removes the element at the specified position in this list.\n     * @param {number} index given index.\n     * @return {*} removed element or undefined if the index is out of bounds.\n     */\n    LinkedList.prototype.removeElementAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements || this.firstNode === null || this.lastNode === null) {\n            return undefined;\n        }\n        var element;\n        if (this.nElements === 1) {\n            //First node in the list.\n            element = this.firstNode.element;\n            this.firstNode = null;\n            this.lastNode = null;\n        }\n        else {\n            var previous = this.nodeAtIndex(index - 1);\n            if (previous === null) {\n                element = this.firstNode.element;\n                this.firstNode = this.firstNode.next;\n            }\n            else if (previous.next === this.lastNode) {\n                element = this.lastNode.element;\n                this.lastNode = previous;\n            }\n            if (previous !== null && previous.next !== null) {\n                element = previous.next.element;\n                previous.next = previous.next.next;\n            }\n        }\n        this.nElements--;\n        return element;\n    };\n    /**\n     * Executes the provided function once for each element present in this list in order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    LinkedList.prototype.forEach = function (callback) {\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            if (callback(currentNode.element) === false) {\n                break;\n            }\n            currentNode = currentNode.next;\n        }\n    };\n    /**\n     * Reverses the order of the elements in this linked list (makes the last\n     * element first, and the first element last).\n     */\n    LinkedList.prototype.reverse = function () {\n        var previous = null;\n        var current = this.firstNode;\n        var temp = null;\n        while (current !== null) {\n            temp = current.next;\n            current.next = previous;\n            previous = current;\n            current = temp;\n        }\n        temp = this.firstNode;\n        this.firstNode = this.lastNode;\n        this.lastNode = temp;\n    };\n    /**\n     * Returns an array containing all of the elements in this list in proper\n     * sequence.\n     * @return {Array.<*>} an array containing all of the elements in this list,\n     * in proper sequence.\n     */\n    LinkedList.prototype.toArray = function () {\n        var array = [];\n        var currentNode = this.firstNode;\n        while (currentNode !== null) {\n            array.push(currentNode.element);\n            currentNode = currentNode.next;\n        }\n        return array;\n    };\n    /**\n     * Returns the number of elements in this list.\n     * @return {number} the number of elements in this list.\n     */\n    LinkedList.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this list contains no elements.\n     * @return {boolean} true if this list contains no elements.\n     */\n    LinkedList.prototype.isEmpty = function () {\n        return this.nElements <= 0;\n    };\n    LinkedList.prototype.toString = function () {\n        return arrays.toString(this.toArray());\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.nodeAtIndex = function (index) {\n        if (index < 0 || index >= this.nElements) {\n            return null;\n        }\n        if (index === (this.nElements - 1)) {\n            return this.lastNode;\n        }\n        var node = this.firstNode;\n        for (var i = 0; i < index && node !== null; i++) {\n            node = node.next;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    LinkedList.prototype.createNode = function (item) {\n        return {\n            element: item,\n            next: null\n        };\n    };\n    return LinkedList;\n}()); // End of linked list\nexports.default = LinkedList;\n\n});\n\nvar Queue_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Queue = /** @class */ (function () {\n    /**\n     * Creates an empty queue.\n     * @class A queue is a First-In-First-Out (FIFO) data structure, the first\n     * element added to the queue will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Queue() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.enqueue = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Inserts the specified element into the end of this queue.\n     * @param {Object} elem the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    Queue.prototype.add = function (elem) {\n        return this.list.add(elem);\n    };\n    /**\n     * Retrieves and removes the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.dequeue = function () {\n        if (this.list.size() !== 0) {\n            var el = this.list.first();\n            this.list.removeElementAtIndex(0);\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the head of this queue.\n     * @return {*} the head of this queue, or undefined if this queue is empty.\n     */\n    Queue.prototype.peek = function () {\n        if (this.list.size() !== 0) {\n            return this.list.first();\n        }\n        return undefined;\n    };\n    /**\n     * Returns the number of elements in this queue.\n     * @return {number} the number of elements in this queue.\n     */\n    Queue.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this queue contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this queue contains the specified element,\n     * false otherwise.\n     */\n    Queue.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this queue is empty.\n     * @return {boolean} true if and only if this queue contains no items; false\n     * otherwise.\n     */\n    Queue.prototype.isEmpty = function () {\n        return this.list.size() <= 0;\n    };\n    /**\n     * Removes all of the elements from this queue.\n     */\n    Queue.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * FIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Queue.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Queue;\n}()); // End of queue\nexports.default = Queue;\n\n});\n\nvar BSTreeKV_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n/**\n * General binary search tree implementation.\n *\n * This interface allows one to search elements using a subset of their attributes (thus the\n * tree can be used as an index for complex objects).\n * The attributes required to define an ordering in the tree must be defined in the type K.\n * Any additional attribute must be defined in the type V.\n *\n * @see BSTree\n */\nvar BSTreeKV = /** @class */ (function () {\n    /**\n     * Creates an empty binary search tree.\n     * @class <p>A binary search tree is a binary tree in which each\n     * internal node stores an element such that the elements stored in the\n     * left subtree are less than it and the elements\n     * stored in the right subtree are greater.</p>\n     * <p>Formally, a binary search tree is a node-based binary tree data structure which\n     * has the following properties:</p>\n     * <ul>\n     * <li>The left subtree of a node contains only nodes with elements less\n     * than the node's element</li>\n     * <li>The right subtree of a node contains only nodes with elements greater\n     * than the node's element</li>\n     * <li>Both the left and right subtrees must also be binary search trees.</li>\n     * </ul>\n     * <p>If the inserted elements are custom objects a compare function must\n     * be provided at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function BSTreeKV(compareFunction) {\n        this.root = null;\n        this.compare = compareFunction || util.defaultCompare;\n        this.nElements = 0;\n    }\n    /**\n     * Adds the specified element to this tree if it is not already present.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if this tree did not already contain the specified element.\n     */\n    BSTreeKV.prototype.add = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        if (this.insertNode(this.createNode(element)) !== null) {\n            this.nElements++;\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Removes all of the elements from this tree.\n     */\n    BSTreeKV.prototype.clear = function () {\n        this.root = null;\n        this.nElements = 0;\n    };\n    /**\n     * Returns true if this tree contains no elements.\n     * @return {boolean} true if this tree contains no elements.\n     */\n    BSTreeKV.prototype.isEmpty = function () {\n        return this.nElements === 0;\n    };\n    /**\n     * Returns the number of elements in this tree.\n     * @return {number} the number of elements in this tree.\n     */\n    BSTreeKV.prototype.size = function () {\n        return this.nElements;\n    };\n    /**\n     * Returns true if this tree contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this tree contains the specified element,\n     * false otherwise.\n     */\n    BSTreeKV.prototype.contains = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        return this.searchNode(this.root, element) !== null;\n    };\n    /**\n     * Looks for the value with the provided search key.\n     * @param {Object} element The key to look for\n     * @return {Object} The value found or undefined if it was not found.\n     */\n    BSTreeKV.prototype.search = function (element) {\n        var ret = this.searchNode(this.root, element);\n        if (ret === null) {\n            return undefined;\n        }\n        return ret.element;\n    };\n    /**\n     * Removes the specified element from this tree if it is present.\n     * @return {boolean} true if this tree contained the specified element.\n     */\n    BSTreeKV.prototype.remove = function (element) {\n        var node = this.searchNode(this.root, element);\n        if (node === null) {\n            return false;\n        }\n        this.removeNode(node);\n        this.nElements--;\n        return true;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * in-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.inorderTraversal = function (callback) {\n        this.inorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in pre-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.preorderTraversal = function (callback) {\n        this.preorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in post-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.postorderTraversal = function (callback) {\n        this.postorderTraversalAux(this.root, callback, {\n            stop: false\n        });\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in\n     * level-order.\n     * @param {function(Object):*} callback function to execute, it is invoked with one\n     * argument: the element value, to break the iteration you can optionally return false.\n     */\n    BSTreeKV.prototype.levelTraversal = function (callback) {\n        this.levelTraversalAux(this.root, callback);\n    };\n    /**\n     * Returns the minimum element of this tree.\n     * @return {*} the minimum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.minimum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.minimumAux(this.root).element;\n    };\n    /**\n     * Returns the maximum element of this tree.\n     * @return {*} the maximum element of this tree or undefined if this tree is\n     * is empty.\n     */\n    BSTreeKV.prototype.maximum = function () {\n        if (this.isEmpty() || this.root === null) {\n            return undefined;\n        }\n        return this.maximumAux(this.root).element;\n    };\n    /**\n     * Executes the provided function once for each element present in this tree in inorder.\n     * Equivalent to inorderTraversal.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    BSTreeKV.prototype.forEach = function (callback) {\n        this.inorderTraversal(callback);\n    };\n    /**\n     * Returns an array containing all of the elements in this tree in in-order.\n     * @return {Array} an array containing all of the elements in this tree in in-order.\n     */\n    BSTreeKV.prototype.toArray = function () {\n        var array = [];\n        this.inorderTraversal(function (element) {\n            array.push(element);\n            return true;\n        });\n        return array;\n    };\n    /**\n     * Returns the height of this tree.\n     * @return {number} the height of this tree or -1 if is empty.\n     */\n    BSTreeKV.prototype.height = function () {\n        return this.heightAux(this.root);\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.searchNode = function (node, element) {\n        var cmp = 1;\n        while (node !== null && cmp !== 0) {\n            cmp = this.compare(element, node.element);\n            if (cmp < 0) {\n                node = node.leftCh;\n            }\n            else if (cmp > 0) {\n                node = node.rightCh;\n            }\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.transplant = function (n1, n2) {\n        if (n1.parent === null) {\n            this.root = n2;\n        }\n        else if (n1 === n1.parent.leftCh) {\n            n1.parent.leftCh = n2;\n        }\n        else {\n            n1.parent.rightCh = n2;\n        }\n        if (n2 !== null) {\n            n2.parent = n1.parent;\n        }\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.removeNode = function (node) {\n        if (node.leftCh === null) {\n            this.transplant(node, node.rightCh);\n        }\n        else if (node.rightCh === null) {\n            this.transplant(node, node.leftCh);\n        }\n        else {\n            var y = this.minimumAux(node.rightCh);\n            if (y.parent !== node) {\n                this.transplant(y, y.rightCh);\n                y.rightCh = node.rightCh;\n                y.rightCh.parent = y;\n            }\n            this.transplant(node, y);\n            y.leftCh = node.leftCh;\n            y.leftCh.parent = y;\n        }\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.inorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.inorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.levelTraversalAux = function (node, callback) {\n        var queue = new Queue_1.default();\n        if (node !== null) {\n            queue.enqueue(node);\n        }\n        node = queue.dequeue() || null;\n        while (node != null) {\n            if (callback(node.element) === false) {\n                return;\n            }\n            if (node.leftCh !== null) {\n                queue.enqueue(node.leftCh);\n            }\n            if (node.rightCh !== null) {\n                queue.enqueue(node.rightCh);\n            }\n            node = queue.dequeue() || null;\n        }\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.preorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.preorderTraversalAux(node.rightCh, callback, signal);\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.postorderTraversalAux = function (node, callback, signal) {\n        if (node === null || signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.leftCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        this.postorderTraversalAux(node.rightCh, callback, signal);\n        if (signal.stop) {\n            return;\n        }\n        signal.stop = callback(node.element) === false;\n    };\n    BSTreeKV.prototype.minimumAux = function (node) {\n        while (node != null && node.leftCh !== null) {\n            node = node.leftCh;\n        }\n        return node;\n    };\n    BSTreeKV.prototype.maximumAux = function (node) {\n        while (node != null && node.rightCh !== null) {\n            node = node.rightCh;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.heightAux = function (node) {\n        if (node === null) {\n            return -1;\n        }\n        return Math.max(this.heightAux(node.leftCh), this.heightAux(node.rightCh)) + 1;\n    };\n    /*\n    * @private\n    */\n    BSTreeKV.prototype.insertNode = function (node) {\n        var parent = null;\n        var position = this.root;\n        while (position !== null) {\n            var cmp = this.compare(node.element, position.element);\n            if (cmp === 0) {\n                return null;\n            }\n            else if (cmp < 0) {\n                parent = position;\n                position = position.leftCh;\n            }\n            else {\n                parent = position;\n                position = position.rightCh;\n            }\n        }\n        node.parent = parent;\n        if (parent === null) {\n            // tree is empty\n            this.root = node;\n        }\n        else if (this.compare(node.element, parent.element) < 0) {\n            parent.leftCh = node;\n        }\n        else {\n            parent.rightCh = node;\n        }\n        return node;\n    };\n    /**\n     * @private\n     */\n    BSTreeKV.prototype.createNode = function (element) {\n        return {\n            element: element,\n            leftCh: null,\n            rightCh: null,\n            parent: null\n        };\n    };\n    return BSTreeKV;\n}());\nexports.default = BSTreeKV;\n\n});\n\nvar BSTree_1 = createCommonjsModule(function (module, exports) {\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n/**\n * Special-case of the binary search tree in which the search key is equal to the element type.\n * This definition is suitable when the element type can not be split between what defines its order\n * and what does not (eg. primitive types as opposed to indexed records).\n *\n * The table below shows some use-case examples for both interfaces:\n *\n *           element type              |  most suitable interface\n * ------------------------------------|----------------------------\n *    number                           |  BSTree<number>\n *    string                           |  BSTree<string>\n * { order: number, data: string }     |  BSTreeKV<{order: number}, {order: number, data: string}>\n *\n * @see BSTreeKV\n */\nvar BSTree = /** @class */ (function (_super) {\n    __extends(BSTree, _super);\n    function BSTree() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return BSTree;\n}(BSTreeKV_1.default));\nexports.default = BSTree;\n\n});\n\nvar Heap_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar Heap = /** @class */ (function () {\n    /**\n     * Creates an empty Heap.\n     * @class\n     * <p>A heap is a binary tree, where the nodes maintain the heap property:\n     * each node is smaller than each of its children and therefore a MinHeap\n     * This implementation uses an array to store elements.</p>\n     * <p>If the inserted elements are custom objects a compare function must be provided,\n     *  at construction time, otherwise the <=, === and >= operators are\n     * used to compare elements. Example:</p>\n     *\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * <p>If a Max-Heap is wanted (greater elements on top) you can a provide a\n     * reverse compare function to accomplish that behavior. Example:</p>\n     *\n     * <pre>\n     * function reverseCompare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return 1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return -1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     *\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two elements. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function Heap(compareFunction) {\n        /**\n         * Array used to store the elements of the heap.\n         * @type {Array.<Object>}\n         * @private\n         */\n        this.data = [];\n        this.compare = compareFunction || util.defaultCompare;\n    }\n    /**\n     * Returns the index of the left child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the left child\n     * for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    Heap.prototype.leftChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 1;\n    };\n    /**\n     * Returns the index of the right child of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the right child\n     * for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    Heap.prototype.rightChildIndex = function (nodeIndex) {\n        return (2 * nodeIndex) + 2;\n    };\n    /**\n     * Returns the index of the parent of the node at the given index.\n     * @param {number} nodeIndex The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    Heap.prototype.parentIndex = function (nodeIndex) {\n        return Math.floor((nodeIndex - 1) / 2);\n    };\n    /**\n     * Returns the index of the smaller child node (if it exists).\n     * @param {number} leftChild left child index.\n     * @param {number} rightChild right child index.\n     * @return {number} the index with the minimum value or -1 if it doesn't\n     * exists.\n     * @private\n     */\n    Heap.prototype.minIndex = function (leftChild, rightChild) {\n        if (rightChild >= this.data.length) {\n            if (leftChild >= this.data.length) {\n                return -1;\n            }\n            else {\n                return leftChild;\n            }\n        }\n        else {\n            if (this.compare(this.data[leftChild], this.data[rightChild]) <= 0) {\n                return leftChild;\n            }\n            else {\n                return rightChild;\n            }\n        }\n    };\n    /**\n     * Moves the node at the given index up to its proper place in the heap.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    Heap.prototype.siftUp = function (index) {\n        var parent = this.parentIndex(index);\n        while (index > 0 && this.compare(this.data[parent], this.data[index]) > 0) {\n            arrays.swap(this.data, parent, index);\n            index = parent;\n            parent = this.parentIndex(index);\n        }\n    };\n    /**\n     * Moves the node at the given index down to its proper place in the heap.\n     * @param {number} nodeIndex The index of the node to move down.\n     * @private\n     */\n    Heap.prototype.siftDown = function (nodeIndex) {\n        //smaller child index\n        var min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        while (min >= 0 && this.compare(this.data[nodeIndex], this.data[min]) > 0) {\n            arrays.swap(this.data, min, nodeIndex);\n            nodeIndex = min;\n            min = this.minIndex(this.leftChildIndex(nodeIndex), this.rightChildIndex(nodeIndex));\n        }\n    };\n    /**\n     * Retrieves but does not remove the root element of this heap.\n     * @return {*} The value at the root of the heap. Returns undefined if the\n     * heap is empty.\n     */\n    Heap.prototype.peek = function () {\n        if (this.data.length > 0) {\n            return this.data[0];\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * Adds the given element into the heap.\n     * @param {*} element the element.\n     * @return true if the element was added or fals if it is undefined.\n     */\n    Heap.prototype.add = function (element) {\n        if (util.isUndefined(element)) {\n            return false;\n        }\n        this.data.push(element);\n        this.siftUp(this.data.length - 1);\n        return true;\n    };\n    /**\n     * Retrieves and removes the root element of this heap.\n     * @return {*} The value removed from the root of the heap. Returns\n     * undefined if the heap is empty.\n     */\n    Heap.prototype.removeRoot = function () {\n        if (this.data.length > 0) {\n            var obj = this.data[0];\n            this.data[0] = this.data[this.data.length - 1];\n            this.data.splice(this.data.length - 1, 1);\n            if (this.data.length > 0) {\n                this.siftDown(0);\n            }\n            return obj;\n        }\n        return undefined;\n    };\n    /**\n     * Returns true if this heap contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this Heap contains the specified element, false\n     * otherwise.\n     */\n    Heap.prototype.contains = function (element) {\n        var equF = util.compareToEquals(this.compare);\n        return arrays.contains(this.data, element, equF);\n    };\n    /**\n     * Returns the number of elements in this heap.\n     * @return {number} the number of elements in this heap.\n     */\n    Heap.prototype.size = function () {\n        return this.data.length;\n    };\n    /**\n     * Checks if this heap is empty.\n     * @return {boolean} true if and only if this heap contains no items; false\n     * otherwise.\n     */\n    Heap.prototype.isEmpty = function () {\n        return this.data.length <= 0;\n    };\n    /**\n     * Removes all of the elements from this heap.\n     */\n    Heap.prototype.clear = function () {\n        this.data.length = 0;\n    };\n    /**\n     * Executes the provided function once for each element present in this heap in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Heap.prototype.forEach = function (callback) {\n        arrays.forEach(this.data, callback);\n    };\n    return Heap;\n}());\nexports.default = Heap;\n\n});\n\nvar LinkedDictionary_1 = createCommonjsModule(function (module, exports) {\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n/**\n * This class is used by the LinkedDictionary Internally\n * Has to be a class, not an interface, because it needs to have\n * the 'unlink' function defined.\n */\nvar LinkedDictionaryPair = /** @class */ (function () {\n    function LinkedDictionaryPair(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    LinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return LinkedDictionaryPair;\n}());\n/**\n * The head and tail elements of the list have null key and value properties but they\n * usually link to normal nodes.\n */\nvar HeadOrTailLinkedDictionaryPair = /** @class */ (function () {\n    function HeadOrTailLinkedDictionaryPair() {\n        this.key = null;\n        this.value = null;\n    }\n    HeadOrTailLinkedDictionaryPair.prototype.unlink = function () {\n        this.prev.next = this.next;\n        this.next.prev = this.prev;\n    };\n    return HeadOrTailLinkedDictionaryPair;\n}());\nfunction isHeadOrTailLinkedDictionaryPair(p) {\n    return !p.next;\n}\nvar LinkedDictionary = /** @class */ (function (_super) {\n    __extends(LinkedDictionary, _super);\n    function LinkedDictionary(toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.head = new HeadOrTailLinkedDictionaryPair();\n        _this.tail = new HeadOrTailLinkedDictionaryPair();\n        _this.head.next = _this.tail;\n        _this.tail.prev = _this.head;\n        return _this;\n    }\n    /**\n     * Inserts the new node to the 'tail' of the list, updating the\n     * neighbors, and moving 'this.tail' (the End of List indicator) that\n     * to the end.\n     */\n    LinkedDictionary.prototype.appendToTail = function (entry) {\n        var lastNode = this.tail.prev;\n        lastNode.next = entry;\n        entry.prev = lastNode;\n        entry.next = this.tail;\n        this.tail.prev = entry;\n    };\n    /**\n     * Retrieves a linked dictionary from the table internally\n     */\n    LinkedDictionary.prototype.getLinkedDictionaryPair = function (key) {\n        if (util.isUndefined(key)) {\n            return undefined;\n        }\n        var k = '$' + this.toStr(key);\n        var pair = (this.table[k]);\n        return pair;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns undefined if this dictionary contains no mapping for this key.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * undefined if the map contains no mapping for this key.\n     */\n    LinkedDictionary.prototype.getValue = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n     * Removes the mapping for this key from this dictionary if it is present.\n     * Also, if a value is present for this key, the entry is removed from the\n     * insertion ordering.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @return {*} previous value associated with specified key, or undefined if\n     * there was no mapping for key.\n     */\n    LinkedDictionary.prototype.remove = function (key) {\n        var pair = this.getLinkedDictionaryPair(key);\n        if (!util.isUndefined(pair)) {\n            _super.prototype.remove.call(this, key); // This will remove it from the table\n            pair.unlink(); // This will unlink it from the chain\n            return pair.value;\n        }\n        return undefined;\n    };\n    /**\n     * Removes all mappings from this LinkedDictionary.\n     * @this {collections.LinkedDictionary}\n     */\n    LinkedDictionary.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.head.next = this.tail;\n        this.tail.prev = this.head;\n    };\n    /**\n     * Internal function used when updating an existing KeyValue pair.\n     * It places the new value indexed by key into the table, but maintains\n     * its place in the linked ordering.\n     */\n    LinkedDictionary.prototype.replace = function (oldPair, newPair) {\n        var k = '$' + this.toStr(newPair.key);\n        // set the new Pair's links to existingPair's links\n        newPair.next = oldPair.next;\n        newPair.prev = oldPair.prev;\n        // Delete Existing Pair from the table, unlink it from chain.\n        // As a result, the nElements gets decremented by this operation\n        this.remove(oldPair.key);\n        // Link new Pair in place of where oldPair was,\n        // by pointing the old pair's neighbors to it.\n        newPair.prev.next = newPair;\n        newPair.next.prev = newPair;\n        this.table[k] = newPair;\n        // To make up for the fact that the number of elements was decremented,\n        // We need to increase it by one.\n        ++this.nElements;\n    };\n    /**\n     * Associates the specified value with the specified key in this dictionary.\n     * If the dictionary previously contained a mapping for this key, the old\n     * value is replaced by the specified value.\n     * Updating of a key that already exists maintains its place in the\n     * insertion order into the map.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or undefined if\n     * there was no mapping for the key or if the key/value are undefined.\n     */\n    LinkedDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return undefined;\n        }\n        var existingPair = this.getLinkedDictionaryPair(key);\n        var newPair = new LinkedDictionaryPair(key, value);\n        var k = '$' + this.toStr(key);\n        // If there is already an element for that key, we\n        // keep it's place in the LinkedList\n        if (!util.isUndefined(existingPair)) {\n            this.replace(existingPair, newPair);\n            return existingPair.value;\n        }\n        else {\n            this.appendToTail(newPair);\n            this.table[k] = newPair;\n            ++this.nElements;\n            return undefined;\n        }\n    };\n    /**\n     * Returns an array containing all of the keys in this LinkedDictionary, ordered\n     * by insertion order.\n     * @return {Array} an array containing all of the keys in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.keys = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(key);\n        });\n        return array;\n    };\n    /**\n     * Returns an array containing all of the values in this LinkedDictionary, ordered by\n     * insertion order.\n     * @return {Array} an array containing all of the values in this LinkedDictionary,\n     * ordered by insertion order.\n     */\n    LinkedDictionary.prototype.values = function () {\n        var array = [];\n        this.forEach(function (key, value) {\n            array.push(value);\n        });\n        return array;\n    };\n    /**\n     * Executes the provided function once for each key-value pair\n     * present in this LinkedDictionary. It is done in the order of insertion\n     * into the LinkedDictionary\n     * @param {function(Object,Object):*} callback function to execute, it is\n     * invoked with two arguments: key and value. To break the iteration you can\n     * optionally return false.\n     */\n    LinkedDictionary.prototype.forEach = function (callback) {\n        var crawlNode = this.head.next;\n        while (!isHeadOrTailLinkedDictionaryPair(crawlNode)) {\n            var ret = callback(crawlNode.key, crawlNode.value);\n            if (ret === false) {\n                return;\n            }\n            crawlNode = crawlNode.next;\n        }\n    };\n    return LinkedDictionary;\n}(Dictionary_1.default)); // End of LinkedDictionary\nexports.default = LinkedDictionary;\n// /**\n//  * Returns true if this dictionary is equal to the given dictionary.\n//  * Two dictionaries are equal if they contain the same mappings.\n//  * @param {collections.Dictionary} other the other dictionary.\n//  * @param {function(Object,Object):boolean=} valuesEqualFunction optional\n//  * function used to check if two values are equal.\n//  * @return {boolean} true if this dictionary is equal to the given dictionary.\n//  */\n// collections.Dictionary.prototype.equals = function(other,valuesEqualFunction) {\n// \tconst eqF = valuesEqualFunction || collections.defaultEquals;\n// \tif(!(other instanceof collections.Dictionary)){\n// \t\treturn false;\n// \t}\n// \tif(this.size() !== other.size()){\n// \t\treturn false;\n// \t}\n// \treturn this.equalsAux(this.firstNode,other.firstNode,eqF);\n// }\n\n});\n\nvar MultiDictionary_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nvar MultiDictionary = /** @class */ (function () {\n    /**\n     * Creates an empty multi dictionary.\n     * @class <p>A multi dictionary is a special kind of dictionary that holds\n     * multiple values against each key. Setting a value into the dictionary will\n     * add the value to an array at that key. Getting a key will return an array,\n     * holding all the values set to that key.\n     * You can configure to allow duplicates in the values.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>If the keys are custom objects a function which converts keys to strings must be\n     * provided. Example:</p>\n     *\n     * <pre>\n     * function petToString(pet) {\n     *     return pet.name;\n     * }\n     * </pre>\n     * <p>If the values are custom objects a function to check equality between values\n     * must be provided. Example:</p>\n     *\n     * <pre>\n     * function petsAreEqualByAge(pet1,pet2) {\n     *     return pet1.age === pet2.age;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object):string=} toStrFunction optional function\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     * @param {function(Object,Object):boolean=} valuesEqualsFunction optional\n     * function to check if two values are equal.\n     *\n     * @param allowDuplicateValues\n     */\n    function MultiDictionary(toStrFunction, valuesEqualsFunction, allowDuplicateValues) {\n        if (allowDuplicateValues === void 0) { allowDuplicateValues = false; }\n        this.dict = new Dictionary_1.default(toStrFunction);\n        this.equalsF = valuesEqualsFunction || util.defaultEquals;\n        this.allowDuplicate = allowDuplicateValues;\n    }\n    /**\n     * Returns an array holding the values to which this dictionary maps\n     * the specified key.\n     * Returns an empty array if this dictionary contains no mappings for this key.\n     * @param {Object} key key whose associated values are to be returned.\n     * @return {Array} an array holding the values to which this dictionary maps\n     * the specified key.\n     */\n    MultiDictionary.prototype.getValue = function (key) {\n        var values = this.dict.getValue(key);\n        if (util.isUndefined(values)) {\n            return [];\n        }\n        return arrays.copy(values);\n    };\n    /**\n     * Adds the value to the array associated with the specified key, if\n     * it is not already present.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} value the value to add to the array at the key\n     * @return {boolean} true if the value was not already associated with that key.\n     */\n    MultiDictionary.prototype.setValue = function (key, value) {\n        if (util.isUndefined(key) || util.isUndefined(value)) {\n            return false;\n        }\n        var array = this.dict.getValue(key);\n        if (util.isUndefined(array)) {\n            this.dict.setValue(key, [value]);\n            return true;\n        }\n        if (!this.allowDuplicate) {\n            if (arrays.contains(array, value, this.equalsF)) {\n                return false;\n            }\n        }\n        array.push(value);\n        return true;\n    };\n    /**\n     * Removes the specified values from the array of values associated with the\n     * specified key. If a value isn't given, all values associated with the specified\n     * key are removed.\n     * @param {Object} key key whose mapping is to be removed from the\n     * dictionary.\n     * @param {Object=} value optional argument to specify the value to remove\n     * from the array associated with the specified key.\n     * @return {*} true if the dictionary changed, false if the key doesn't exist or\n     * if the specified value isn't associated with the specified key.\n     */\n    MultiDictionary.prototype.remove = function (key, value) {\n        if (util.isUndefined(value)) {\n            var v = this.dict.remove(key);\n            return !util.isUndefined(v);\n        }\n        var array = this.dict.getValue(key);\n        if (!util.isUndefined(array) && arrays.remove(array, value, this.equalsF)) {\n            if (array.length === 0) {\n                this.dict.remove(key);\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns an array containing all of the keys in this dictionary.\n     * @return {Array} an array containing all of the keys in this dictionary.\n     */\n    MultiDictionary.prototype.keys = function () {\n        return this.dict.keys();\n    };\n    /**\n     * Returns an array containing all of the values in this dictionary.\n     * @return {Array} an array containing all of the values in this dictionary.\n     */\n    MultiDictionary.prototype.values = function () {\n        var values = this.dict.values();\n        var array = [];\n        for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n            var v = values_1[_i];\n            for (var _a = 0, v_1 = v; _a < v_1.length; _a++) {\n                var w = v_1[_a];\n                array.push(w);\n            }\n        }\n        return array;\n    };\n    /**\n     * Returns true if this dictionary at least one value associatted the specified key.\n     * @param {Object} key key whose presence in this dictionary is to be\n     * tested.\n     * @return {boolean} true if this dictionary at least one value associatted\n     * the specified key.\n     */\n    MultiDictionary.prototype.containsKey = function (key) {\n        return this.dict.containsKey(key);\n    };\n    /**\n     * Removes all mappings from this dictionary.\n     */\n    MultiDictionary.prototype.clear = function () {\n        this.dict.clear();\n    };\n    /**\n     * Returns the number of keys in this dictionary.\n     * @return {number} the number of key-value mappings in this dictionary.\n     */\n    MultiDictionary.prototype.size = function () {\n        return this.dict.size();\n    };\n    /**\n     * Returns true if this dictionary contains no mappings.\n     * @return {boolean} true if this dictionary contains no mappings.\n     */\n    MultiDictionary.prototype.isEmpty = function () {\n        return this.dict.isEmpty();\n    };\n    return MultiDictionary;\n}()); // end of multi dictionary\nexports.default = MultiDictionary;\n\n});\n\nvar FactoryDictionary_1 = createCommonjsModule(function (module, exports) {\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar FactoryDictionary = /** @class */ (function (_super) {\n    __extends(FactoryDictionary, _super);\n    /**\n     * Creates an empty dictionary.\n     * @class <p>Dictionaries map keys to values; each key can map to at most one value.\n     * This implementation accepts any kind of objects as keys.</p>\n     *\n     * <p>The default factory function should return a new object of the provided\n     * type. Example:</p>\n     * <pre>\n     * function petFactory() {\n     *  return new Pet();\n     * }\n     * </pre>\n     *\n     * <p>If the keys are custom objects a function which converts keys to unique\n     * strings must be provided. Example:</p>\n     * <pre>\n     * function petToString(pet) {\n     *  return pet.name;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function():V=} defaultFactoryFunction function used to create a\n     * default object.\n     * @param {function(Object):string=} toStrFunction optional function used\n     * to convert keys to strings. If the keys aren't strings or if toString()\n     * is not appropriate, a custom function which receives a key and returns a\n     * unique string must be provided.\n     */\n    function FactoryDictionary(defaultFactoryFunction, toStrFunction) {\n        var _this = _super.call(this, toStrFunction) || this;\n        _this.defaultFactoryFunction = defaultFactoryFunction;\n        return _this;\n    }\n    /**\n     * Associates the specified default value with the specified key in this dictionary,\n     * if it didn't contain the key yet. If the key existed, the existing value will be used.\n     * @param {Object} key key with which the specified value is to be\n     * associated.\n     * @param {Object} defaultValue default value to be associated with the specified key.\n     * @return {*} previous value associated with the specified key, or the default value,\n     * if the key didn't exist yet.\n     */\n    FactoryDictionary.prototype.setDefault = function (key, defaultValue) {\n        var currentValue = _super.prototype.getValue.call(this, key);\n        if (util.isUndefined(currentValue)) {\n            this.setValue(key, defaultValue);\n            return defaultValue;\n        }\n        return currentValue;\n    };\n    /**\n     * Returns the value to which this dictionary maps the specified key.\n     * Returns a default value created by the factory passed in the constructor,\n     * if this dictionary contains no mapping for this key. The missing key will\n     * automatically be added to the dictionary.\n     * @param {Object} key key whose associated value is to be returned.\n     * @return {*} the value to which this dictionary maps the specified key or\n     * a default value if the map contains no mapping for this key.\n     */\n    FactoryDictionary.prototype.getValue = function (key) {\n        return this.setDefault(key, this.defaultFactoryFunction());\n    };\n    return FactoryDictionary;\n}(Dictionary_1.default));\nexports.default = FactoryDictionary;\n\n});\n\nvar PriorityQueue_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * Creates an empty priority queue.\n     * @class <p>In a priority queue each element is associated with a \"priority\",\n     * elements are dequeued in highest-priority-first order (the elements with the\n     * highest priority are dequeued first). Priority Queues are implemented as heaps.\n     * If the inserted elements are custom objects a compare function must be provided,\n     * otherwise the <=, === and >= operators are used to compare object priority.</p>\n     * <pre>\n     * function compare(a, b) {\n     *  if (a is less than b by some ordering criterion) {\n     *     return -1;\n     *  } if (a is greater than b by the ordering criterion) {\n     *     return 1;\n     *  }\n     *  // a must be equal to b\n     *  return 0;\n     * }\n     * </pre>\n     * @constructor\n     * @param {function(Object,Object):number=} compareFunction optional\n     * function used to compare two element priorities. Must return a negative integer,\n     * zero, or a positive integer as the first argument is less than, equal to,\n     * or greater than the second.\n     */\n    function PriorityQueue(compareFunction) {\n        this.heap = new Heap_1.default(util.reverseCompareFunction(compareFunction));\n    }\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Inserts the specified element into this priority queue.\n     * @param {Object} element the element to insert.\n     * @return {boolean} true if the element was inserted, or false if it is undefined.\n     */\n    PriorityQueue.prototype.add = function (element) {\n        return this.heap.add(element);\n    };\n    /**\n     * Retrieves and removes the highest priority element of this queue.\n     * @return {*} the the highest priority element of this queue,\n     *  or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        if (this.heap.size() !== 0) {\n            var el = this.heap.peek();\n            this.heap.removeRoot();\n            return el;\n        }\n        return undefined;\n    };\n    /**\n     * Retrieves, but does not remove, the highest priority element of this queue.\n     * @return {*} the highest priority element of this queue, or undefined if this queue is empty.\n     */\n    PriorityQueue.prototype.peek = function () {\n        return this.heap.peek();\n    };\n    /**\n     * Returns true if this priority queue contains the specified element.\n     * @param {Object} element element to search for.\n     * @return {boolean} true if this priority queue contains the specified element,\n     * false otherwise.\n     */\n    PriorityQueue.prototype.contains = function (element) {\n        return this.heap.contains(element);\n    };\n    /**\n     * Checks if this priority queue is empty.\n     * @return {boolean} true if and only if this priority queue contains no items; false\n     * otherwise.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.heap.isEmpty();\n    };\n    /**\n     * Returns the number of elements in this priority queue.\n     * @return {number} the number of elements in this priority queue.\n     */\n    PriorityQueue.prototype.size = function () {\n        return this.heap.size();\n    };\n    /**\n     * Removes all of the elements from this priority queue.\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.heap.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this queue in\n     * no particular order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    PriorityQueue.prototype.forEach = function (callback) {\n        this.heap.forEach(callback);\n    };\n    return PriorityQueue;\n}()); // end of priority queue\nexports.default = PriorityQueue;\n\n});\n\nvar Stack_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Stack = /** @class */ (function () {\n    /**\n     * Creates an empty Stack.\n     * @class A Stack is a Last-In-First-Out (LIFO) data structure, the last\n     * element added to the stack will be the first one to be removed. This\n     * implementation uses a linked list as a container.\n     * @constructor\n     */\n    function Stack() {\n        this.list = new LinkedList_1.default();\n    }\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.push = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Pushes an item onto the top of this stack.\n     * @param {Object} elem the element to be pushed onto this stack.\n     * @return {boolean} true if the element was pushed or false if it is undefined.\n     */\n    Stack.prototype.add = function (elem) {\n        return this.list.add(elem, 0);\n    };\n    /**\n     * Removes the object at the top of this stack and returns that object.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.pop = function () {\n        return this.list.removeElementAtIndex(0);\n    };\n    /**\n     * Looks at the object at the top of this stack without removing it from the\n     * stack.\n     * @return {*} the object at the top of this stack or undefined if the\n     * stack is empty.\n     */\n    Stack.prototype.peek = function () {\n        return this.list.first();\n    };\n    /**\n     * Returns the number of elements in this stack.\n     * @return {number} the number of elements in this stack.\n     */\n    Stack.prototype.size = function () {\n        return this.list.size();\n    };\n    /**\n     * Returns true if this stack contains the specified element.\n     * <p>If the elements inside this stack are\n     * not comparable with the === operator, a custom equals function should be\n     * provided to perform searches, the function must receive two arguments and\n     * return true if they are equal, false otherwise. Example:</p>\n     *\n     * <pre>\n     * const petsAreEqualByName (pet1, pet2) {\n     *  return pet1.name === pet2.name;\n     * }\n     * </pre>\n     * @param {Object} elem element to search for.\n     * @param {function(Object,Object):boolean=} equalsFunction optional\n     * function to check if two elements are equal.\n     * @return {boolean} true if this stack contains the specified element,\n     * false otherwise.\n     */\n    Stack.prototype.contains = function (elem, equalsFunction) {\n        return this.list.contains(elem, equalsFunction);\n    };\n    /**\n     * Checks if this stack is empty.\n     * @return {boolean} true if and only if this stack contains no items; false\n     * otherwise.\n     */\n    Stack.prototype.isEmpty = function () {\n        return this.list.isEmpty();\n    };\n    /**\n     * Removes all of the elements from this stack.\n     */\n    Stack.prototype.clear = function () {\n        this.list.clear();\n    };\n    /**\n     * Executes the provided function once for each element present in this stack in\n     * LIFO order.\n     * @param {function(Object):*} callback function to execute, it is\n     * invoked with one argument: the element value, to break the iteration you can\n     * optionally return false.\n     */\n    Stack.prototype.forEach = function (callback) {\n        this.list.forEach(callback);\n    };\n    return Stack;\n}()); // End of stack\nexports.default = Stack;\n\n});\n\nvar MultiRootTree_1 = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Direction;\n(function (Direction) {\n    Direction[Direction[\"BEFORE\"] = 0] = \"BEFORE\";\n    Direction[Direction[\"AFTER\"] = 1] = \"AFTER\";\n    Direction[Direction[\"INSIDE_AT_END\"] = 2] = \"INSIDE_AT_END\";\n    Direction[Direction[\"INSIDE_AT_START\"] = 3] = \"INSIDE_AT_START\";\n})(Direction || (Direction = {}));\nvar MultiRootTree = /** @class */ (function () {\n    function MultiRootTree(rootIds, nodes) {\n        if (rootIds === void 0) { rootIds = []; }\n        if (nodes === void 0) { nodes = {}; }\n        this.rootIds = rootIds;\n        this.nodes = nodes;\n        this.initRootIds();\n        this.initNodes();\n    }\n    MultiRootTree.prototype.initRootIds = function () {\n        for (var _i = 0, _a = this.rootIds; _i < _a.length; _i++) {\n            var rootId = _a[_i];\n            this.createEmptyNodeIfNotExist(rootId);\n        }\n    };\n    MultiRootTree.prototype.initNodes = function () {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var _i = 0, _a = this.nodes[nodeKey]; _i < _a.length; _i++) {\n                    var nodeListItem = _a[_i];\n                    this.createEmptyNodeIfNotExist(nodeListItem);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.createEmptyNodeIfNotExist = function (nodeKey) {\n        if (!this.nodes[nodeKey]) {\n            this.nodes[nodeKey] = [];\n        }\n    };\n    MultiRootTree.prototype.getRootIds = function () {\n        var clone = this.rootIds.slice();\n        return clone;\n    };\n    MultiRootTree.prototype.getNodes = function () {\n        var clone = {};\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                clone[nodeKey] = this.nodes[nodeKey].slice();\n            }\n        }\n        return clone;\n    };\n    MultiRootTree.prototype.getObject = function () {\n        return {\n            rootIds: this.getRootIds(),\n            nodes: this.getNodes(),\n        };\n    };\n    MultiRootTree.prototype.toObject = function () {\n        return this.getObject();\n    };\n    MultiRootTree.prototype.flatten = function () {\n        var _this = this;\n        var extraPropsObject = [];\n        for (var i = 0; i < this.rootIds.length; i++) {\n            var rootId = this.rootIds[i];\n            extraPropsObject.push({\n                id: rootId,\n                level: 0,\n                hasParent: false,\n                childrenCount: 0,\n            });\n            traverse(rootId, this.nodes, extraPropsObject, 0);\n        }\n        for (var _i = 0, extraPropsObject_1 = extraPropsObject; _i < extraPropsObject_1.length; _i++) {\n            var o = extraPropsObject_1[_i];\n            o.childrenCount = countChildren(o.id);\n        }\n        return extraPropsObject;\n        function countChildren(id) {\n            if (!_this.nodes[id]) {\n                return 0;\n            }\n            else {\n                var childrenCount = _this.nodes[id].length;\n                return childrenCount;\n            }\n        }\n        function traverse(startId, nodes, returnArray, level) {\n            if (level === void 0) { level = 0; }\n            if (!startId || !nodes || !returnArray || !nodes[startId]) {\n                return;\n            }\n            level++;\n            var idsList = nodes[startId];\n            for (var i = 0; i < idsList.length; i++) {\n                var id = idsList[i];\n                returnArray.push({ id: id, level: level, hasParent: true });\n                traverse(id, nodes, returnArray, level);\n            }\n            level--;\n        }\n    };\n    MultiRootTree.prototype.moveIdBeforeId = function (moveId, beforeId) {\n        return this.moveId(moveId, beforeId, Direction.BEFORE);\n    };\n    MultiRootTree.prototype.moveIdAfterId = function (moveId, afterId) {\n        return this.moveId(moveId, afterId, Direction.AFTER);\n    };\n    MultiRootTree.prototype.moveIdIntoId = function (moveId, insideId, atStart) {\n        if (atStart === void 0) { atStart = true; }\n        if (atStart) {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_START);\n        }\n        else {\n            return this.moveId(moveId, insideId, Direction.INSIDE_AT_END);\n        }\n    };\n    MultiRootTree.prototype.swapRootIdWithRootId = function (rootId, withRootId) {\n        var leftIndex = this.findRootId(rootId);\n        var rightIndex = this.findRootId(withRootId);\n        this.swapRootPositionWithRootPosition(leftIndex, rightIndex);\n    };\n    MultiRootTree.prototype.swapRootPositionWithRootPosition = function (swapRootPosition, withRootPosition) {\n        var temp = this.rootIds[withRootPosition];\n        this.rootIds[withRootPosition] = this.rootIds[swapRootPosition];\n        this.rootIds[swapRootPosition] = temp;\n    };\n    MultiRootTree.prototype.deleteId = function (id) {\n        this.rootDeleteId(id);\n        this.nodeAndSubNodesDelete(id);\n        this.nodeRefrencesDelete(id);\n    };\n    MultiRootTree.prototype.insertIdBeforeId = function (beforeId, insertId) {\n        var foundRootIdIndex = this.findRootId(beforeId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, beforeId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdAfterId = function (belowId, insertId) {\n        var foundRootIdIndex = this.findRootId(belowId);\n        if (foundRootIdIndex > -1) {\n            this.insertIdIntoRoot(insertId, foundRootIdIndex + 1);\n        }\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                var foundNodeIdIndex = this.findNodeId(nodeKey, belowId);\n                if (foundNodeIdIndex > -1) {\n                    this.insertIdIntoNode(nodeKey, insertId, foundNodeIdIndex + 1);\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.insertIdIntoId = function (insideId, insertId) {\n        this.nodeInsertAtEnd(insideId, insertId);\n        this.nodes[insertId] = [];\n    };\n    MultiRootTree.prototype.insertIdIntoRoot = function (id, position) {\n        if (position === undefined) {\n            this.rootInsertAtEnd(id);\n        }\n        else {\n            if (position < 0) {\n                var length_1 = this.rootIds.length;\n                this.rootIds.splice((position + length_1 + 1), 0, id);\n            }\n            else {\n                this.rootIds.splice(position, 0, id);\n            }\n        }\n        this.nodes[id] = this.nodes[id] || [];\n    };\n    MultiRootTree.prototype.insertIdIntoNode = function (nodeKey, id, position) {\n        this.nodes[nodeKey] = this.nodes[nodeKey] || [];\n        this.nodes[id] = this.nodes[id] || [];\n        if (position === undefined) {\n            this.nodeInsertAtEnd(nodeKey, id);\n        }\n        else {\n            if (position < 0) {\n                var length_2 = this.nodes[nodeKey].length;\n                this.nodes[nodeKey].splice((position + length_2 + 1), 0, id);\n            }\n            else {\n                this.nodes[nodeKey].splice(position, 0, id);\n            }\n        }\n    };\n    MultiRootTree.prototype.moveId = function (moveId, beforeId, direction) {\n        var sourceId = moveId;\n        var sourceRootIndex = this.findRootId(sourceId);\n        if (this.nodes[beforeId]) ;\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        var targetId = beforeId;\n        var targetRootIndex = this.findRootId(targetId);\n        if (this.nodes[beforeId]) ;\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                this.findNodeId(nodeKey, beforeId);\n                break;\n            }\n        }\n        // got all\n        if (sourceRootIndex > -1) {\n            if (targetRootIndex > -1) {\n                // moving root to root\n                // console.log(`Moving ROOT to ROOT`);\n                // console.log(`RootIds:`);\n                // console.log(this.rootIds);\n                // console.log(`TargetIndex=${targetRootIndex}, SourceIndex=${sourceRootIndex}`);\n                // console.log(`TargetId=${targetId}, SourceId=${sourceId}`);\n                this.rootDelete(sourceRootIndex); // indexes change now\n                if (targetRootIndex > sourceRootIndex) {\n                    targetRootIndex--;\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving root (source) ABOVE node (target)\n                // will remove one entry from roots\n                this.rootDelete(sourceRootIndex);\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (targetRootIndex > -1) {\n                // moving node (source) ABOVE root (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            // this.nodeInsertId(nodeKey, sourceId, index);\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                switch (direction) {\n                    case Direction.BEFORE:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex);\n                        break;\n                    case Direction.AFTER:\n                        this.insertIdIntoRoot(sourceId, targetRootIndex + 1);\n                        break;\n                    case Direction.INSIDE_AT_START:\n                        this.nodeInsertAtStart(targetId, sourceId);\n                        break;\n                    case Direction.INSIDE_AT_END:\n                        this.nodeInsertAtEnd(targetId, sourceId);\n                        break;\n                }\n            }\n            else {\n                // moving node (source) ABOVE node (target)\n                // delete source id from each node\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, sourceId);\n                        if (index > -1) {\n                            this.nodeDeleteAtIndex(nodeKey, index);\n                            break;\n                        }\n                    }\n                }\n                for (var nodeKey in this.nodes) {\n                    if (this.nodes.hasOwnProperty(nodeKey)) {\n                        var index = this.findNodeId(nodeKey, targetId);\n                        if (index > -1) {\n                            switch (direction) {\n                                case Direction.BEFORE:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index);\n                                    break;\n                                case Direction.AFTER:\n                                    this.insertIdIntoNode(nodeKey, sourceId, index + 1);\n                                    break;\n                                case Direction.INSIDE_AT_START:\n                                    this.nodeInsertAtStart(targetId, sourceId);\n                                    break;\n                                case Direction.INSIDE_AT_END:\n                                    this.nodeInsertAtEnd(targetId, sourceId);\n                                    break;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.swapArrayElements = function (arr, indexA, indexB) {\n        var temp = arr[indexA];\n        arr[indexA] = arr[indexB];\n        arr[indexB] = temp;\n        return arr;\n    };\n    MultiRootTree.prototype.rootDeleteId = function (id) {\n        var index = this.findRootId(id);\n        if (index > -1) {\n            this.rootDelete(index);\n        }\n    };\n    MultiRootTree.prototype.nodeAndSubNodesDelete = function (nodeKey) {\n        var toDeleteLater = [];\n        for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n            var id = this.nodes[nodeKey][i];\n            this.nodeAndSubNodesDelete(id);\n            toDeleteLater.push(nodeKey);\n        }\n        this.nodeDelete(nodeKey);\n        for (var i = 0; i < toDeleteLater.length; i++) {\n            this.nodeDelete(toDeleteLater[i]);\n        }\n    };\n    MultiRootTree.prototype.nodeRefrencesDelete = function (id) {\n        for (var nodeKey in this.nodes) {\n            if (this.nodes.hasOwnProperty(nodeKey)) {\n                for (var i = 0; i < this.nodes[nodeKey].length; i++) {\n                    var targetId = this.nodes[nodeKey][i];\n                    if (targetId === id) {\n                        this.nodeDeleteAtIndex(nodeKey, i);\n                    }\n                }\n            }\n        }\n    };\n    MultiRootTree.prototype.nodeDelete = function (nodeKey) {\n        delete this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.findRootId = function (id) {\n        return this.rootIds.indexOf(id);\n    };\n    MultiRootTree.prototype.findNodeId = function (nodeKey, id) {\n        return this.nodes[nodeKey].indexOf(id);\n    };\n    MultiRootTree.prototype.findNode = function (nodeKey) {\n        return this.nodes[nodeKey];\n    };\n    MultiRootTree.prototype.nodeInsertAtStart = function (nodeKey, id) {\n        this.nodes[nodeKey].unshift(id);\n    };\n    MultiRootTree.prototype.nodeInsertAtEnd = function (nodeKey, id) {\n        this.nodes[nodeKey].push(id);\n    };\n    MultiRootTree.prototype.rootDelete = function (index) {\n        this.rootIds.splice(index, 1);\n    };\n    MultiRootTree.prototype.nodeDeleteAtIndex = function (nodeKey, index) {\n        this.nodes[nodeKey].splice(index, 1);\n    };\n    MultiRootTree.prototype.rootInsertAtStart = function (id) {\n        this.rootIds.unshift(id);\n    };\n    MultiRootTree.prototype.rootInsertAtEnd = function (id) {\n        this.rootIds.push(id);\n    };\n    return MultiRootTree;\n}());\nexports.default = MultiRootTree;\n\n});\n\nvar lib = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Copyright 2013 Basarat Ali Syed. All Rights Reserved.\n//\n// Licensed under MIT open source license http://opensource.org/licenses/MIT\n//\n// Orginal javascript code was by Mauricio Santos\n//\n\nexports.arrays = arrays;\n\nexports.Bag = Bag_1.default;\n\nexports.BSTree = BSTree_1.default;\n\nexports.BSTreeKV = BSTreeKV_1.default;\n\nexports.Dictionary = Dictionary_1.default;\n\nexports.Heap = Heap_1.default;\n\nexports.LinkedDictionary = LinkedDictionary_1.default;\n\nexports.LinkedList = LinkedList_1.default;\n\nexports.MultiDictionary = MultiDictionary_1.default;\n\nexports.FactoryDictionary = FactoryDictionary_1.default;\nvar FactoryDictionary_2 = FactoryDictionary_1;\nexports.DefaultDictionary = FactoryDictionary_2.default;\n\nexports.Queue = Queue_1.default;\n\nexports.PriorityQueue = PriorityQueue_1.default;\n\nexports.Set = _Set.default;\n\nexports.Stack = Stack_1.default;\n\nexports.MultiRootTree = MultiRootTree_1.default;\n\nexports.util = util;\n\n});\n\nvar Dictionary = lib.Dictionary;\nexport { Dictionary };\n", "import {vec3} from \"../../../_snowpack/pkg/gl-matrix.js\";\nexport function Lerp(x, y, t) {\n  return x + t * (y - x);\n}\nexport function NormalizeByRange(target, min, max) {\n  return (target - min) / (max - min);\n}\nexport function RandomRange(min, max) {\n  return ~~(Math.random() * (max - min + 1)) + min;\n}\n;\nexport function Normalize2D(vector) {\n  let vi = Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\n  let normalized = {\n    x: vector.x / vi,\n    y: vector.y / vi\n  };\n  return normalized;\n}\nexport function VectorNumAdd(vector, scale) {\n  return {\n    x: vector.x + scale,\n    y: vector.y + scale\n  };\n}\nexport function VectorNumScale(vector, scale) {\n  return {\n    x: vector.x * scale,\n    y: vector.y * scale\n  };\n}\nexport function VectorDistance(a, b) {\n  return Math.sqrt(Math.pow(b.x - a.x, 2) + Math.pow(b.y - a.y, 2));\n}\nexport function VectorMaginitude(a) {\n  return Math.sqrt(Math.pow(a.x, 2) + Math.pow(a.y, 2));\n}\nexport function VectorAdd(a, b) {\n  return {\n    x: a.x + b.x,\n    y: a.y + b.y\n  };\n}\nexport function VectorMinus(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\nexport function VectorToArray(v) {\n  return [v.x, v.y];\n}\nexport function ArrayToVector(array) {\n  return {x: array[0], y: array[1]};\n}\nexport function Clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n;\nexport function GetImagePromise(imagePath) {\n  return new Promise((resolve) => {\n    const im = new Image();\n    im.crossOrigin = \"anonymous\";\n    im.src = imagePath;\n    im.onload = () => resolve(Object.assign(im));\n    return im;\n  });\n}\nexport function GetRelativeURL(url) {\n  return url.replace(/^(?:\\/\\/|[^/]+)*\\//, \"\");\n}\nexport function StringToVector(vectorString) {\n  let splits = vectorString.split(\",\");\n  return {\n    x: parseFloat(splits[0]),\n    y: parseFloat(splits[1])\n  };\n}\nexport function RoundToDecimal(value, decimal) {\n  let d = Math.pow(10, decimal);\n  return Math.round(value * d) / d;\n}\nexport function RandomChar(N) {\n  var s = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  return Array.apply(null, Array(N)).map(function() {\n    return s.charAt(Math.floor(Math.random() * s.length));\n  }).join(\"\");\n}\nexport function ToEulerAngles(q) {\n  let angles = vec3.create();\n  let sinr_cosp = 2 * (q[3] * q[0] + q[1] * q[2]);\n  let cosr_cosp = 1 - 2 * (q[0] * q[0] + q[1] * q[1]);\n  angles[0] = Math.atan2(sinr_cosp, cosr_cosp);\n  let sinp = 2 * (q[3] * q[1] - q[2] * q[0]);\n  if (Math.abs(sinp) >= 1)\n    angles[1] = Math.sign(sinp);\n  else\n    angles[1] = Math.asin(sinp);\n  let siny_cosp = 2 * (q[3] * q[2] + q[0] * q[1]);\n  let cosy_cosp = 1 - 2 * (q[1] * q[1] + q[2] * q[2]);\n  angles[2] = Math.atan2(siny_cosp, cosy_cosp);\n  return angles;\n}\n", "import {Dictionary} from \"../../../_snowpack/pkg/typescript-collections.js\";\nimport {GetImagePromise} from \"../Utility/UtilityMethod.js\";\nexport var SourceType;\n(function(SourceType2) {\n  SourceType2[SourceType2[\"Texture\"] = 0] = \"Texture\";\n  SourceType2[SourceType2[\"Shader\"] = 1] = \"Shader\";\n  SourceType2[SourceType2[\"GlMaterial\"] = 2] = \"GlMaterial\";\n})(SourceType || (SourceType = {}));\n;\nclass WebglResource {\n  constructor() {\n    this.textureCache = new Dictionary();\n    this.glResourceCache = new Dictionary();\n    this.glLocalTextureCache = new Dictionary();\n    this.glGlobalTextureCache = new Dictionary();\n  }\n  async PrepareVFShaders(vertFilePath, fragFilePath) {\n    let VertPros = fetch(vertFilePath, {method: \"GET\", credentials: \"include\"});\n    let FragPros = fetch(fragFilePath, {method: \"GET\", credentials: \"include\"});\n    return Promise.all([VertPros, FragPros]).then((responses) => Promise.all([responses[0].text(), responses[1].text()])).then((values) => {\n      let gLSLDataSet = {\n        vertex_shader: values[0],\n        fragment_shader: values[1]\n      };\n      return gLSLDataSet;\n    });\n  }\n  async GetImage(path) {\n    if (this.textureCache.containsKey(path)) {\n      return this.textureCache.getValue(path);\n    }\n    let texture = await GetImagePromise(path);\n    this.textureCache.setValue(path, texture);\n    return texture;\n  }\n  GetCacheSource(key) {\n    if (this.glResourceCache.containsKey(key)) {\n      return this.glResourceCache.getValue(key);\n    }\n    return null;\n  }\n  SaveCacheSource(key, glSource) {\n    if (this.glResourceCache.containsKey(key)) {\n      return this.glResourceCache.setValue(key, glSource);\n    }\n  }\n  CreateGLTexture(gl, width, height, format, type, data) {\n    const targetTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, targetTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, type, data);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    return targetTexture;\n  }\n  GetGLTextureSource(key, localTextureOffset) {\n    if (!this.glLocalTextureCache.containsKey(key))\n      return null;\n    let localTexCache = this.glLocalTextureCache.getValue(key);\n    if (!this.glGlobalTextureCache.containsKey(localTexCache.texture_key))\n      return null;\n    let globalTexCache = this.glGlobalTextureCache.getValue(localTexCache.texture_key);\n    localTexCache.localIndex = globalTexCache.globalIndex - localTextureOffset;\n    return {globalType: globalTexCache, localType: localTexCache};\n  }\n  SaveGlobalTextureSource(key, webglTexture, texBaseIndex) {\n    let currentIndex = texBaseIndex + this.glGlobalTextureCache.size();\n    let globalTextureType = {texture: webglTexture, globalIndex: currentIndex};\n    this.glGlobalTextureCache.setValue(key, globalTextureType);\n    return globalTextureType;\n  }\n  SaveGLTextureSource(key, globalTextureKey, uniformLocation) {\n    let localTextureType = {uniformLocation, localIndex: -1, texture_key: globalTextureKey};\n    this.glLocalTextureCache.setValue(key, localTextureType);\n    return localTextureType;\n  }\n}\nexport default WebglResource;\n", "class Material {\n  constructor(id, glProgram, glResource) {\n    this.id = id;\n    this.glProgram = glProgram;\n    this.glResource = glResource;\n    this.cacheAttrShaderPosition = {};\n    this.cacheUniformShaderPosition = {};\n  }\n  PreloadProperties(gl, config) {\n    gl.useProgram(this.glProgram);\n    this.PreloadAttributeProperties(gl, config.attributes);\n    this.PreloadUniformProperties(gl, config.uniforms);\n    this.PreloadUniformTexture(gl, config.texture);\n  }\n  PreloadAttributeProperties(gl, properties) {\n    Object.keys(properties).forEach((key) => {\n      var attributes = gl.getAttribLocation(this.glProgram, key);\n      if (Array.isArray(properties[key].value)) {\n        let buffer = gl.createBuffer();\n        let rawDataArray = properties[key].value;\n        if (rawDataArray != null && rawDataArray.length > 0) {\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(rawDataArray), gl.STATIC_DRAW);\n        }\n        this.cacheAttrShaderPosition[key] = {position_id: attributes, buffer, vertexPointer: properties[key].vertexPointer};\n      } else {\n        this.cacheAttrShaderPosition[key] = {position_id: attributes, buffer: properties[key].value, vertexPointer: properties[key].vertexPointer};\n      }\n    });\n  }\n  PreloadUniformProperties(gl, properties) {\n    let pCount = properties.length;\n    for (let i = 0; i < pCount; i++) {\n      let uniform = gl.getUniformLocation(this.glProgram, properties[i]);\n      if (uniform != null) {\n        this.cacheUniformShaderPosition[properties[i]] = uniform;\n      }\n    }\n  }\n  PreloadUniformTexture(gl, properties) {\n    let pCount = properties.length;\n    for (let i = 0; i < pCount; i++) {\n      let uniTextureDefine = properties[i];\n      let uniform = gl.getUniformLocation(this.glProgram, properties[i].id);\n      if (uniform != null) {\n        this.cacheUniformShaderPosition[properties[i].id] = uniform;\n        let key = this.id + properties[i].id;\n        let textureKey = properties[i].texture === void 0 ? key : properties[i].texture;\n        this.glResource.SaveGLTextureSource(key, textureKey, uniform);\n        if (!this.glResource.glGlobalTextureCache.containsKey(textureKey)) {\n          let texture = uniTextureDefine.textureBuffer == null ? gl.createTexture() : uniTextureDefine.textureBuffer;\n          let cache = this.glResource.SaveGlobalTextureSource(textureKey, texture, gl.TEXTURE0);\n          gl.activeTexture(cache.globalIndex);\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          if (uniTextureDefine.textureBuffer == null)\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, new Uint8Array([255, 255, 255, 255]));\n          gl.uniform1i(uniform, cache.globalIndex - gl.TEXTURE0);\n        }\n      }\n    }\n  }\n  ExecuteAttributeProp(gl, attribute_name, dynamicArray, dynamicBuffer) {\n    if (!(attribute_name in this.cacheAttrShaderPosition))\n      return;\n    let cacheAttr = this.cacheAttrShaderPosition[attribute_name];\n    if (cacheAttr.position_id < 0)\n      return;\n    gl.enableVertexAttribArray(cacheAttr.position_id);\n    gl.bindBuffer(gl.ARRAY_BUFFER, dynamicBuffer == null ? cacheAttr.buffer : dynamicBuffer);\n    if (dynamicArray != null && dynamicBuffer == null) {\n      gl.bufferData(gl.ARRAY_BUFFER, dynamicArray, gl.DYNAMIC_DRAW);\n    }\n    var size = cacheAttr.vertexPointer.size;\n    var type = cacheAttr.vertexPointer.type;\n    var normalize = cacheAttr.vertexPointer.normalize;\n    var stride = 0;\n    var offset = 0;\n    gl.vertexAttribPointer(cacheAttr.position_id, size, type, normalize, stride, offset);\n  }\n  ExecuteUniformProp(attribute_name, dataset, uniformAction, isMatrixOperation = false) {\n    if (!(attribute_name in this.cacheUniformShaderPosition))\n      return;\n    let cacheUnifPoint = this.cacheUniformShaderPosition[attribute_name];\n    if (!isMatrixOperation)\n      uniformAction(cacheUnifPoint, dataset);\n    else\n      uniformAction(cacheUnifPoint, false, dataset);\n  }\n  ExecuteUniformSprite(gl, uniform_name, sprite) {\n    let glTextureDataSet = this.glResource.GetGLTextureSource(this.id + uniform_name, gl.TEXTURE0);\n    if (glTextureDataSet == null)\n      return;\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.activeTexture(glTextureDataSet.globalType.globalIndex);\n    gl.bindTexture(gl.TEXTURE_2D, glTextureDataSet.globalType.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, sprite);\n    gl.uniform1i(glTextureDataSet.localType.uniformLocation, glTextureDataSet.localType.localIndex);\n  }\n  ExecuteUniformTex(gl, uniform_name, glTexture) {\n    let glTextureDataSet = this.glResource.GetGLTextureSource(this.id + uniform_name, gl.TEXTURE0);\n    if (glTextureDataSet == null)\n      return;\n    gl.activeTexture(glTextureDataSet.globalType.globalIndex);\n    gl.bindTexture(gl.TEXTURE_2D, glTextureDataSet.globalType.texture);\n    gl.uniform1i(glTextureDataSet.localType.uniformLocation, glTextureDataSet.localType.localIndex);\n  }\n}\nexport default Material;\n", "import Material from \"./Material.js\";\nimport {RandomChar} from \"../../Utility/UtilityMethod.js\";\nclass MaterialManager {\n  constructor(gl, webglResource) {\n    this._gl = gl;\n    this._webglResource = webglResource;\n    this._shaderCache = {};\n  }\n  GetGlShaderSet(id) {\n    if (id in this._shaderCache)\n      return this._shaderCache[id];\n    return null;\n  }\n  async LoadTextureToObject(shapeObject, uniformID, texture_path) {\n    let tex = await this._webglResource.GetImage(texture_path);\n    shapeObject.SetCustomUniformAttr(uniformID, {\n      isMatrix: false,\n      value: tex,\n      function: this._gl.uniform1i\n    });\n  }\n  async LoadAndPrepareShaders(rawShaderPathArray) {\n    if (rawShaderPathArray == null)\n      return false;\n    let count = rawShaderPathArray.length;\n    for (let i = 0; i < count; i++)\n      await this.LoadAndPrepareShader(rawShaderPathArray[i].id, rawShaderPathArray[i].vertex, rawShaderPathArray[i].fragment);\n    return true;\n  }\n  async LoadAndPrepareShader(shader_id, vertex_path, frag_path) {\n    if (shader_id in this._shaderCache)\n      return this._shaderCache[shader_id];\n    let glslSources = await this._webglResource.PrepareVFShaders(vertex_path, frag_path);\n    let vertexShader = this.CreateShader(this._gl.VERTEX_SHADER, glslSources.vertex_shader);\n    let fragmentShader = this.CreateShader(this._gl.FRAGMENT_SHADER, glslSources.fragment_shader);\n    let shaderDataType = {vertShader: vertexShader, fragShader: fragmentShader};\n    this._shaderCache[shader_id] = shaderDataType;\n    return shaderDataType;\n  }\n  async CreateMaterialFromRawPath(shader_id, vertex_path, frag_path) {\n    let shaderDataType = await this.LoadAndPrepareShader(shader_id, vertex_path, frag_path);\n    let glProgram = this.CreateGLProgram(shaderDataType.vertShader, shaderDataType.fragShader);\n    let material = new Material(RandomChar(6), glProgram, this._webglResource);\n    return material;\n  }\n  CreateMaterial(vertShader, fragShader) {\n    let glProgram = this.CreateGLProgram(vertShader, fragShader);\n    let material = new Material(RandomChar(6), glProgram, this._webglResource);\n    return material;\n  }\n  CreateShader(type, source) {\n    let gl = this._gl;\n    let shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n      return shader;\n    }\n    gl.deleteShader(shader);\n    return null;\n  }\n  CreateGLProgram(vertShader, fragShader) {\n    let gl = this._gl;\n    let program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    var success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n      return program;\n    }\n    gl.deleteProgram(program);\n    return null;\n  }\n}\nexport default MaterialManager;\n", "class Mesh {\n  get vertCount() {\n    return Math.round(this._meshData.vertexCount / 3);\n  }\n  get meshData() {\n    return this._meshData;\n  }\n  constructor(meshData) {\n    this._meshData = meshData;\n  }\n  SetVertex(vertex) {\n    this._meshData.vertex = vertex;\n    this._meshData.nativeVertex = new Float32Array(vertex);\n  }\n  SetUV(uv) {\n    this._meshData.uv = uv;\n    this._meshData.nativeUV = new Float32Array(uv);\n  }\n  SetNormal(normal) {\n    this._meshData.normal = normal;\n    this._meshData.nativeNormal = new Float32Array(normal);\n  }\n}\nexport default Mesh;\n", "export default function CreateQuadMesh() {\n  let vertex = GetQuadVertex();\n  let uv = GetQuadUV();\n  let normal = GetQuadNormal();\n  let tangent = GetQuadTangent();\n  return {\n    vertex,\n    uv,\n    normal,\n    tangent,\n    glUsageType: WebGLRenderingContext.STATIC_DRAW,\n    nativeVertex: new Float32Array(vertex),\n    nativeNormal: new Float32Array(normal),\n    nativeUV: new Float32Array(uv),\n    nativeTangent: new Float32Array(tangent),\n    vertexCount: vertex.length,\n    glBufferIndices: null,\n    glBufferVertex: null,\n    glBufferNormal: null,\n    glBufferTangent: null,\n    glBufferUV: null\n  };\n}\nfunction GetQuadVertex() {\n  return [\n    -1,\n    -1,\n    0,\n    -1,\n    1,\n    0,\n    1,\n    -1,\n    0,\n    1,\n    -1,\n    0,\n    -1,\n    1,\n    0,\n    1,\n    1,\n    0\n  ];\n}\nfunction GetQuadUV() {\n  return [\n    0,\n    0,\n    0,\n    1,\n    1,\n    0,\n    1,\n    0,\n    0,\n    1,\n    1,\n    1\n  ];\n}\nfunction GetQuadNormal() {\n  return [\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1,\n    0,\n    0,\n    1\n  ];\n}\nfunction GetQuadTangent() {\n  return [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0\n  ];\n}\nfunction GetColor(color, vertexCount) {\n  let normals = [];\n  for (let i = 0; i < vertexCount; i++) {\n    normals = normals.concat(color);\n  }\n  return normals;\n}\n", "export default function CreateQuadMesh() {\n  let vertex = GetCubeVertex();\n  let uv = GetCubeUV(6);\n  let normal = GetCubeNormal([0, 0, 1], [1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, -1, 0], [0, 0, -1]);\n  let tangent = GetCubeNormal([0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]);\n  return {\n    vertex,\n    uv,\n    normal,\n    tangent,\n    glUsageType: WebGLRenderingContext.STATIC_DRAW,\n    nativeVertex: new Float32Array(vertex),\n    nativeNormal: new Float32Array(normal),\n    nativeUV: new Float32Array(uv),\n    nativeTangent: new Float32Array(tangent),\n    vertexCount: vertex.length,\n    glBufferIndices: null,\n    glBufferVertex: null,\n    glBufferNormal: null,\n    glBufferTangent: null,\n    glBufferUV: null\n  };\n}\nfunction GetCubeVertex() {\n  return [\n    -1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    -1,\n    -1,\n    1,\n    -1,\n    -1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    1,\n    -1,\n    1,\n    -1,\n    -1,\n    1,\n    1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    -1,\n    1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    1,\n    -1,\n    -1,\n    1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    1,\n    1,\n    -1\n  ];\n}\nfunction GetCubeUV(faceCount) {\n  let uv = [];\n  for (let i = 0; i < faceCount; i++) {\n    uv = uv.concat([\n      0,\n      0,\n      0,\n      1,\n      1,\n      0,\n      1,\n      0,\n      0,\n      1,\n      1,\n      1\n    ]);\n  }\n  return uv;\n}\nfunction GetColor(color, vertexCount) {\n  let normals = [];\n  for (let i = 0; i < vertexCount; i++) {\n    normals = normals.concat(color);\n  }\n  return normals;\n}\nfunction GetCubeNormal(...defineNormal) {\n  let normals = [];\n  for (let i = 0; i < defineNormal.length; i++) {\n    let face = [];\n    for (let k = 0; k < 6; k++) {\n      face = face.concat(defineNormal[i]);\n    }\n    normals = normals.concat(face);\n  }\n  return normals;\n}\n", "export default function CreateNullMesh() {\n  return {\n    vertex: null,\n    uv: null,\n    normal: null,\n    tangent: null,\n    glUsageType: WebGLRenderingContext.STATIC_DRAW,\n    nativeVertex: null,\n    nativeNormal: null,\n    nativeUV: null,\n    nativeTangent: null,\n    vertexCount: 0,\n    glBufferIndices: null,\n    glBufferVertex: null,\n    glBufferNormal: null,\n    glBufferUV: null,\n    glBufferTangent: null\n  };\n}\n", "export let GLProgramIDs = {\n  Standard: \"glprogram@standard_material\",\n  Unlit: \"glprogram@unlit_material\",\n  DepthMap: \"glprogram@depth_material\"\n};\nexport let StandardShaderKey = {\n  a_vertex: \"a_vertex\",\n  a_color: \"a_color\",\n  a_normal: \"a_normal\",\n  a_uv: \"a_uv\",\n  u_time: \"u_time\",\n  u_mainColor: \"u_mainColor\"\n};\nexport let MeshIDs = {\n  Quad: \"mesh@quad\",\n  Cube: \"mesh@cube\",\n  Null: \"mesh@null\"\n};\n", "import Mesh from \"./Mesh.js\";\nimport Quad from \"./Primitive/Quad.js\";\nimport Cube from \"./Primitive/Cube.js\";\nimport Null from \"./Primitive/Null.js\";\nimport {MeshIDs} from \"../../Utility/KatachiStringSet.js\";\n;\nclass MeshManager {\n  constructor() {\n    this.meshCache = {};\n  }\n  CreateQuad() {\n    return this.CreateAndCacehMeshType(MeshIDs.Quad, Quad);\n  }\n  CreateCube() {\n    return this.CreateAndCacehMeshType(MeshIDs.Cube, Cube);\n  }\n  CreateNull(id) {\n    return this.CreateAndCacehMeshType(id, Null);\n  }\n  CreateAndCacehMeshType(id, meshFunc) {\n    if (id in this.meshCache) {\n      return this.meshCache[id];\n    }\n    let meshDataset = meshFunc();\n    let mesh = new Mesh(meshDataset);\n    this.meshCache[id] = mesh;\n    return mesh;\n  }\n}\nexport default MeshManager;\n", "export const DefaultVertexShaderParameter = {\n  vertex: \"a_vertex\",\n  color: \"a_color\",\n  uv: \"a_uv\",\n  normal: \"a_normal\",\n  tangent: \"a_tangent\",\n  time: \"u_time\",\n  mainColor: \"u_mainColor\",\n  mainTex: \"u_mainTex\",\n  normalTex: \"u_normalTex\",\n  mainTex_Texel: \"u_mainTex_Texel\",\n  modelMatrix: \"u_modelMatrix\",\n  viewMatrix: \"u_viewMatrix\",\n  inverseTransposeModelMatrix: \"u_inverseTransposeModelMatrix\",\n  modelViewProjectionMatrix: \"u_MVPMatrix\",\n  directionLightDir: \"u_directionLightDir\",\n  directionLightColor: \"u_directionLightColor\",\n  ambientLightColor: \"u_ambientLightColor\",\n  depthMapTexture: \"u_depthTex\",\n  depthMapTex_Texel: \"u_depthTex_Texel\",\n  lightSpaceMVPMatrix: \"u_lightSpaceMVPMatrix\"\n};\n", "import {DefaultVertexShaderParameter} from \"./MaterialTypes.js\";\nexport function GetDefaultMaterialConfig(gl) {\n  let config = {\n    attributes: {\n      a_vertex: {\n        value: [],\n        drawType: WebGLRenderingContext.STATIC_DRAW,\n        vertexPointer: {size: 3, type: gl.FLOAT, normalize: false}\n      },\n      a_uv: {\n        value: [],\n        drawType: WebGLRenderingContext.STATIC_DRAW,\n        vertexPointer: {size: 2, type: gl.FLOAT, normalize: false}\n      },\n      a_color: {\n        value: [],\n        drawType: WebGLRenderingContext.STATIC_DRAW,\n        vertexPointer: {size: 4, type: gl.FLOAT, normalize: true}\n      },\n      a_normal: {\n        value: [],\n        drawType: WebGLRenderingContext.STATIC_DRAW,\n        vertexPointer: {size: 3, type: gl.FLOAT, normalize: true}\n      },\n      a_tangent: {\n        value: [],\n        drawType: WebGLRenderingContext.STATIC_DRAW,\n        vertexPointer: {size: 4, type: gl.FLOAT, normalize: true}\n      }\n    },\n    uniforms: [\n      DefaultVertexShaderParameter.time,\n      DefaultVertexShaderParameter.mainColor,\n      DefaultVertexShaderParameter.mainTex,\n      DefaultVertexShaderParameter.modelMatrix,\n      DefaultVertexShaderParameter.modelViewProjectionMatrix,\n      DefaultVertexShaderParameter.inverseTransposeModelMatrix,\n      DefaultVertexShaderParameter.directionLightColor,\n      DefaultVertexShaderParameter.directionLightDir,\n      DefaultVertexShaderParameter.ambientLightColor,\n      DefaultVertexShaderParameter.lightSpaceMVPMatrix,\n      DefaultVertexShaderParameter.depthMapTex_Texel,\n      DefaultVertexShaderParameter.mainTex_Texel\n    ],\n    texture: [\n      {id: DefaultVertexShaderParameter.mainTex},\n      {id: DefaultVertexShaderParameter.normalTex},\n      {id: DefaultVertexShaderParameter.depthMapTexture, texture: DefaultVertexShaderParameter.depthMapTexture}\n    ],\n    count: 0\n  };\n  return config;\n}\n", "import {vec3} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nexport const Vector = {\n  up: vec3.fromValues(0, 1, 0),\n  right: vec3.fromValues(1, 0, 0),\n  forward: vec3.fromValues(0, 0, 1)\n};\nexport const Calculation = Object.freeze({\n  Radian2Degree: 180 / Math.PI,\n  Degree2Radian: Math.PI * 180\n});\n", "import {vec3} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nimport {Vector} from \"./TransformStatic.js\";\nexport default class TransformVector {\n  constructor() {\n    this.cacheTVector = {\n      forward: vec3.create(),\n      right: vec3.create(),\n      top: vec3.create()\n    };\n  }\n  UpdateTransformVector(rotation) {\n    return this.CalculateTransformVector(rotation, this.cacheTVector);\n  }\n  CalculateTransformVector(rotation, cacheTVector) {\n    cacheTVector.forward = this.GetForward(rotation);\n    cacheTVector.right = this.GetRight();\n    cacheTVector.top = this.GetUp();\n    return cacheTVector;\n  }\n  GetTransformVector() {\n    return this.cacheTVector;\n  }\n  GetForward(rotation) {\n    this.cacheTVector.forward[0] = Math.cos(rotation[0]) * Math.cos(rotation[1]);\n    this.cacheTVector.forward[1] = Math.sin(rotation[1]);\n    this.cacheTVector.forward[2] = Math.sin(rotation[0]) * Math.cos(rotation[1]);\n    return this.cacheTVector.forward;\n  }\n  GetRight() {\n    vec3.cross(this.cacheTVector.right, Vector.up, this.cacheTVector.forward);\n    return vec3.normalize(this.cacheTVector.right, this.cacheTVector.right);\n  }\n  GetUp() {\n    return vec3.cross(this.cacheTVector.top, this.cacheTVector.forward, this.cacheTVector.right);\n  }\n}\n", "import {mat4, quat, vec3} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nimport TransformVector from \"./TransformVector.js\";\nimport {ToEulerAngles} from \"../../Utility/UtilityMethod.js\";\nclass Transform {\n  constructor(position, rotation, scale) {\n    this.translateVector = vec3.create();\n    this.translateVectorX = vec3.create();\n    this.translateVectorY = vec3.create();\n    this.translateVectorZ = vec3.create();\n    this._position = position;\n    this._rotation = rotation;\n    this._scale = scale;\n    this._quaterion = quat.create();\n    quat.fromEuler(this._quaterion, rotation[0], rotation[1], rotation[2]);\n    this._relativePosition = vec3.create();\n    this._relativeRotation = vec3.create();\n    this._relativeScale = vec3.create();\n    this._relativeQuaterion = quat.create();\n    this._relativeModelMatrix = mat4.create();\n    this._preSaveRelativeModelMatrix = mat4.create();\n    this._modelMatrix = mat4.create();\n    this._inverseTransposeMatrix = mat4.create();\n    this.transformVector = new TransformVector();\n    this._parent = null;\n    this._children = [];\n  }\n  get relativePosition() {\n    return this._relativePosition;\n  }\n  get relativeRotation() {\n    return this._relativeRotation;\n  }\n  get relativeScale() {\n    return this._relativeScale;\n  }\n  get position() {\n    return this._position;\n  }\n  get rotation() {\n    return this._rotation;\n  }\n  get scale() {\n    return this._scale;\n  }\n  get childCount() {\n    return this.children.length;\n  }\n  get children() {\n    return this._children;\n  }\n  get parent() {\n    return this._parent;\n  }\n  get InverseTransposeMatrix() {\n    mat4.invert(this._inverseTransposeMatrix, this._modelMatrix);\n    mat4.transpose(this._inverseTransposeMatrix, this._inverseTransposeMatrix);\n    return this._inverseTransposeMatrix;\n  }\n  get modelMatrix() {\n    return this._modelMatrix;\n  }\n  UpdateModelMatrix() {\n    if (this._parent == null) {\n      return this.GetModelMatrix(this._position, this._scale, this._quaterion, this._modelMatrix);\n    }\n    this.GetModelMatrix(this._relativePosition, this._relativeScale, this._relativeQuaterion, this._relativeModelMatrix);\n    mat4.mul(this._modelMatrix, this._parent.modelMatrix, this._relativeModelMatrix);\n    this.SetTransformByMatrix(this._position, this._quaterion, this._rotation, this._scale, this._modelMatrix);\n    return this._modelMatrix;\n  }\n  GetModelMatrix(position, scale, quaterion, targetMotrix) {\n    return mat4.fromRotationTranslationScale(targetMotrix, quaterion, position, scale);\n  }\n  Scale(n) {\n    if (this.parent == null)\n      vec3.scale(this._scale, this._scale, n);\n    else\n      vec3.scale(this._relativeScale, this._relativeScale, n);\n  }\n  Translate(x, y, z) {\n    if (this.parent == null)\n      this.ExecuteTranslate(x, y, z, this.rotation, this._position);\n    else\n      this.ExecuteTranslate(x, y, z, this._relativeRotation, this._relativePosition);\n  }\n  SetPosition(x, y, z) {\n    if (this.parent == null)\n      vec3.set(this._position, x, y, z);\n    else\n      vec3.set(this._relativePosition, x, y, z);\n  }\n  ExecuteTranslate(x, y, z, rotation, position) {\n    let transformVector = this.transformVector.UpdateTransformVector(rotation);\n    vec3.scale(this.translateVectorX, transformVector.right, x);\n    vec3.scale(this.translateVectorY, transformVector.top, y);\n    vec3.scale(this.translateVectorZ, transformVector.forward, z);\n    vec3.add(this.translateVector, this.translateVectorX, this.translateVectorY);\n    vec3.add(this.translateVector, this.translateVector, this.translateVectorZ);\n    vec3.add(position, position, this.translateVector);\n  }\n  Rotate(roll, pitch, yaw) {\n    if (this.parent == null)\n      this.ExecuteRotate(roll, pitch, yaw, this._quaterion);\n    else\n      this.ExecuteRotate(roll, pitch, yaw, this._relativeQuaterion);\n  }\n  SetEuler(x, y, z) {\n    if (this.parent == null)\n      this.ExecuteEuler(x, y, z, this._quaterion, this._rotation);\n    else\n      this.ExecuteEuler(x, y, z, this._relativeQuaterion, this._relativeRotation);\n  }\n  ExecuteRotate(roll, pitch, yaw, quaterion) {\n    quat.rotateX(quaterion, quaterion, roll);\n    quat.rotateY(quaterion, quaterion, pitch);\n    quat.rotateZ(quaterion, quaterion, yaw);\n  }\n  ExecuteEuler(x, y, z, quaterion, rotation) {\n    rotation[0] = x;\n    rotation[1] = y;\n    rotation[2] = z;\n    quat.fromEuler(quaterion, x, y, z);\n  }\n  UpdateRelativeTransformByParent(parentTransform) {\n    if (parentTransform == null) {\n      this.SetTransformByMatrix(this._position, this._quaterion, this._rotation, this._scale, this._modelMatrix);\n      return;\n    }\n    let worldModelMatrix = this.GetModelMatrix(this._position, this._scale, this._quaterion, this.modelMatrix);\n    let inverseParentMatrix = mat4.create();\n    mat4.invert(inverseParentMatrix, parentTransform.UpdateModelMatrix());\n    mat4.mul(this._preSaveRelativeModelMatrix, inverseParentMatrix, worldModelMatrix);\n    this.SetTransformByMatrix(this._relativePosition, this._relativeQuaterion, this._relativeRotation, this._relativeScale, this._preSaveRelativeModelMatrix);\n  }\n  SetTransformByMatrix(position, quaterion, rotation, scale, matrix) {\n    position = mat4.getTranslation(position, matrix);\n    quaterion = mat4.getRotation(quaterion, matrix);\n    rotation = ToEulerAngles(quaterion);\n    scale = mat4.getScaling(scale, matrix);\n  }\n  SetParent(parentTransform) {\n    this._parent = parentTransform;\n    if (parentTransform == null)\n      return;\n    if (this.parent != null) {\n      this.parent.RemoveChildren(this);\n    }\n    parentTransform.AppendChild(this);\n    this.UpdateRelativeTransformByParent(parentTransform);\n  }\n  AppendChild(targetTransform) {\n    let targetIndex = this._children.findIndex((x) => x == targetTransform);\n    if (targetIndex < 0)\n      this._children.push(targetTransform);\n  }\n  RemoveChildren(targetTransform) {\n    let targetIndex = this._children.findIndex((x) => x == targetTransform);\n    if (targetIndex >= 0)\n      this._children.splice(targetIndex, 1);\n  }\n}\nexport function CreateEmptyTransform() {\n  let p = vec3.create();\n  let r = vec3.create();\n  let s = vec3.fromValues(1, 1, 1);\n  return new Transform(p, r, s);\n}\nexport default Transform;\n", "import {CreateEmptyTransform} from \"./Transform/Transform.js\";\nexport default class ObjectBase {\n  constructor() {\n    this.id = \"\";\n    this.name = \"NoName\";\n    this.transform = CreateEmptyTransform();\n  }\n}\n", "import {DefaultVertexShaderParameter} from \"../Material/MaterialTypes.js\";\nimport ObjectInterface from \"../Object.js\";\nimport {mat4, vec2} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nclass ShapeObject extends ObjectInterface {\n  constructor(transform, mesh, material) {\n    super();\n    this.transform = transform;\n    this.mesh = mesh;\n    this.material = material;\n    this.modelViewProjectionMatrix = mat4.create();\n    this.matUniformAttributes = {};\n  }\n  SetMesh(mesh) {\n    this.mesh = mesh;\n  }\n  SetCustomUniformAttrs(matUniformAttributes) {\n    this.matUniformAttributes = matUniformAttributes;\n  }\n  SetCustomUniformAttr(material_name, matUniformAttributes) {\n    this.matUniformAttributes[material_name] = matUniformAttributes;\n  }\n  GetMVPMatrix(viewMatrixFromCamera, projectionMatrix) {\n    let MV = mat4.mul(this.modelViewProjectionMatrix, viewMatrixFromCamera, this.transform.modelMatrix);\n    return mat4.mul(this.modelViewProjectionMatrix, projectionMatrix, MV);\n  }\n  ProcessMaterialAttr(gl, material) {\n    material.ExecuteAttributeProp(gl, DefaultVertexShaderParameter.vertex, this.mesh.meshData.nativeVertex, this.mesh.meshData.glBufferVertex);\n    material.ExecuteAttributeProp(gl, DefaultVertexShaderParameter.uv, this.mesh.meshData.nativeUV, this.mesh.meshData.glBufferUV);\n    material.ExecuteAttributeProp(gl, DefaultVertexShaderParameter.normal, this.mesh.meshData.nativeNormal, this.mesh.meshData.glBufferNormal);\n    material.ExecuteAttributeProp(gl, DefaultVertexShaderParameter.tangent, this.mesh.meshData.nativeTangent, this.mesh.meshData.glBufferTangent);\n  }\n  ProcessMaterialUniform(gl, material, time, worldMatrix, modelInverseTMatrix, mvpMatrix, light, depthTexture, depthTextureTexel) {\n    material.ExecuteUniformProp(DefaultVertexShaderParameter.time, time, gl.uniform1f.bind(gl));\n    material.ExecuteUniformProp(DefaultVertexShaderParameter.modelMatrix, worldMatrix, gl.uniformMatrix4fv.bind(gl), true);\n    material.ExecuteUniformProp(DefaultVertexShaderParameter.inverseTransposeModelMatrix, modelInverseTMatrix, gl.uniformMatrix4fv.bind(gl), true);\n    material.ExecuteUniformProp(DefaultVertexShaderParameter.modelViewProjectionMatrix, mvpMatrix, gl.uniformMatrix4fv.bind(gl), true);\n    if (light != null) {\n      material.ExecuteUniformProp(DefaultVertexShaderParameter.directionLightDir, light.directionLigth.transform.transformVector.GetTransformVector().forward, gl.uniform3fv.bind(gl));\n      material.ExecuteUniformProp(DefaultVertexShaderParameter.directionLightColor, light.directionLigth.color, gl.uniform4fv.bind(gl));\n      material.ExecuteUniformProp(DefaultVertexShaderParameter.lightSpaceMVPMatrix, light.directionLigth.projection.spaceMatrix, gl.uniformMatrix4fv.bind(gl), true);\n      material.ExecuteUniformProp(DefaultVertexShaderParameter.ambientLightColor, light.ambient_light, gl.uniform4fv.bind(gl));\n    }\n    if (depthTexture != null) {\n      material.ExecuteUniformTex(gl, DefaultVertexShaderParameter.depthMapTexture, depthTexture);\n      material.ExecuteUniformProp(DefaultVertexShaderParameter.depthMapTex_Texel, depthTextureTexel, gl.uniform2fv.bind(gl));\n      Object.keys(this.matUniformAttributes).forEach((key) => {\n        if (this.matUniformAttributes[key].value instanceof HTMLImageElement) {\n          let htmlSprite = this.matUniformAttributes[key].value;\n          material.ExecuteUniformSprite(gl, key, this.matUniformAttributes[key].value);\n          material.ExecuteUniformProp(DefaultVertexShaderParameter.mainTex_Texel, vec2.fromValues(1 / htmlSprite.width, 1 / htmlSprite.height), gl.uniform2fv.bind(gl));\n        } else {\n          material.ExecuteUniformProp(key, this.matUniformAttributes[key].value, this.matUniformAttributes[key].function.bind(gl), this.matUniformAttributes[key].isMatrix);\n        }\n      });\n      this.matUniformAttributes = {};\n    }\n  }\n}\nexport default ShapeObject;\n", "import ShapeObject from \"./ShapeObject.js\";\nexport default class GLTFShapeObject extends ShapeObject {\n  constructor(transform, emptyMesh, material, gltfModel) {\n    super(transform, emptyMesh, material);\n    this.gltfModel = gltfModel;\n  }\n}\n", "import { f as fromValues, c as create, b as fromQuat, d as fromValues$1, e as multiply, g as fromValues$2, h as fromValues$3, t as translate, s as scale, l as lerp, i as slerp, j as create$1, k as create$2, n as clone } from './common/quat-c94c670f.js';\n\nconst createMat4FromArray = (array) => {\r\n    return fromValues(array[0], array[1], array[2], array[3], array[4], array[5], array[6], array[7], array[8], array[9], array[10], array[11], array[12], array[13], array[14], array[15]);\r\n};\r\nconst applyRotationFromQuat = (transform, rotation) => {\r\n    const rotationMatrix = create();\r\n    fromQuat(rotationMatrix, fromValues$1(rotation[0], rotation[1], rotation[2], rotation[3]));\r\n    multiply(transform, rotationMatrix, transform);\r\n};\n\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst accessorSizes = {\r\n    'SCALAR': 1,\r\n    'VEC2': 2,\r\n    'VEC3': 3,\r\n    'VEC4': 4,\r\n    'MAT2': 4,\r\n    'MAT3': 9,\r\n    'MAT4': 16\r\n};\r\nvar BufferType;\r\n(function (BufferType) {\r\n    BufferType[BufferType[\"Float\"] = 5126] = \"Float\";\r\n    BufferType[BufferType[\"Short\"] = 5123] = \"Short\";\r\n})(BufferType || (BufferType = {}));\r\nconst getBuffer = (path, buffer) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const dir = path.split('/').slice(0, -1).join('/');\r\n    const response = yield fetch(`${dir}/${buffer}`);\r\n    return yield response.arrayBuffer();\r\n});\r\nconst getTexture = (gl, uri) => __awaiter(void 0, void 0, void 0, function* () {\r\n    return new Promise(resolve => {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n            const texture = gl.createTexture();\r\n            gl.bindTexture(gl.TEXTURE_2D, texture);\r\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n            const ext = gl.getExtension('EXT_texture_filter_anisotropic');\r\n            if (ext) {\r\n                const max = gl.getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n                gl.texParameterf(gl.TEXTURE_2D, ext.TEXTURE_MAX_ANISOTROPY_EXT, max);\r\n            }\r\n            gl.generateMipmap(gl.TEXTURE_2D);\r\n            resolve(texture);\r\n        };\r\n        img.src = uri;\r\n    });\r\n});\r\nconst readBufferFromFile = (gltf, buffers, accessor) => {\r\n    const bufferView = gltf.bufferViews[accessor.bufferView];\r\n    const size = accessorSizes[accessor.type];\r\n    const componentType = accessor.componentType;\r\n    const type = accessor.type;\r\n    const data = componentType == BufferType.Float\r\n        ? new Float32Array(buffers[bufferView.buffer], (accessor.byteOffset || 0) + (bufferView.byteOffset || 0), accessor.count * size)\r\n        : new Int16Array(buffers[bufferView.buffer], (accessor.byteOffset || 0) + (bufferView.byteOffset || 0), accessor.count * size);\r\n    return {\r\n        size,\r\n        data,\r\n        type,\r\n        componentType,\r\n    };\r\n};\r\nconst getAccessor = (gltf, mesh, attributeName) => {\r\n    const attribute = mesh.primitives[0].attributes[attributeName];\r\n    return gltf.accessors[attribute];\r\n};\r\nconst getBufferFromName = (gl, gltf, buffers, mesh, name) => {\r\n    if (mesh.primitives[0].attributes[name] === undefined) {\r\n        return null;\r\n    }\r\n    const accessor = getAccessor(gltf, mesh, name);\r\n    const bufferData = readBufferFromFile(gltf, buffers, accessor);\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n    gl.bufferData(gl.ARRAY_BUFFER, bufferData.data, gl.STATIC_DRAW);\r\n    return {\r\n        buffer,\r\n        size: bufferData.size,\r\n        type: bufferData.componentType,\r\n    };\r\n};\r\nconst loadNodes = (index, node) => {\r\n    const transform = create();\r\n    if (node.translation !== undefined)\r\n        translate(transform, transform, node.translation);\r\n    if (node.rotation !== undefined)\r\n        applyRotationFromQuat(transform, node.rotation);\r\n    if (node.scale !== undefined)\r\n        scale(transform, transform, node.scale);\r\n    if (node.matrix !== undefined)\r\n        createMat4FromArray(node.matrix);\r\n    return {\r\n        id: index,\r\n        name: node.name,\r\n        children: node.children || [],\r\n        localBindTransform: transform,\r\n        animatedTransform: create(),\r\n        skin: node.skin,\r\n        mesh: node.mesh\r\n    };\r\n};\r\nconst loadAnimation = (gltf, animation, buffers) => {\r\n    const channels = animation.channels.map(c => {\r\n        const sampler = animation.samplers[c.sampler];\r\n        const time = readBufferFromFile(gltf, buffers, gltf.accessors[sampler.input]);\r\n        const buffer = readBufferFromFile(gltf, buffers, gltf.accessors[sampler.output]);\r\n        return {\r\n            node: c.target.node,\r\n            type: c.target.path,\r\n            time,\r\n            buffer,\r\n            interpolation: sampler.interpolation ? sampler.interpolation : 'LINEAR',\r\n        };\r\n    });\r\n    const c = {};\r\n    channels.forEach((channel) => {\r\n        if (c[channel.node] === undefined) {\r\n            c[channel.node] = {\r\n                translation: [],\r\n                rotation: [],\r\n                scale: [],\r\n            };\r\n        }\r\n        for (let i = 0; i < channel.time.data.length; i++) {\r\n            const size = channel.interpolation === 'CUBICSPLINE' ? channel.buffer.size * 3 : channel.buffer.size;\r\n            const offset = channel.interpolation === 'CUBICSPLINE' ? channel.buffer.size : 0;\r\n            const transform = channel.type === 'rotation'\r\n                ? fromValues$1(channel.buffer.data[i * size + offset], channel.buffer.data[i * size + offset + 1], channel.buffer.data[i * size + offset + 2], channel.buffer.data[i * size + offset + 3])\r\n                : fromValues$3(channel.buffer.data[i * size + offset], channel.buffer.data[i * size + offset + 1], channel.buffer.data[i * size + offset + 2]);\r\n            c[channel.node][channel.type].push({\r\n                time: channel.time.data[i],\r\n                transform: transform,\r\n                type: channel.type,\r\n            });\r\n        }\r\n    });\r\n    return c;\r\n};\r\nconst loadMesh = (gl, gltf, mesh, buffers) => {\r\n    let indices = null;\r\n    let elementCount = 0;\r\n    if (mesh.primitives[0].indices !== undefined) {\r\n        const indexAccessor = gltf.accessors[mesh.primitives[0].indices];\r\n        const indexBuffer = readBufferFromFile(gltf, buffers, indexAccessor);\r\n        indices = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indices);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBuffer.data, gl.STATIC_DRAW);\r\n        elementCount = indexBuffer.data.length;\r\n    }\r\n    else {\r\n        const accessor = getAccessor(gltf, mesh, 'POSITION');\r\n        elementCount = accessor.count;\r\n    }\r\n    return {\r\n        indices,\r\n        elementCount,\r\n        positions: getBufferFromName(gl, gltf, buffers, mesh, 'POSITION'),\r\n        normals: getBufferFromName(gl, gltf, buffers, mesh, 'NORMAL'),\r\n        tangents: getBufferFromName(gl, gltf, buffers, mesh, 'TANGENT'),\r\n        texCoord: getBufferFromName(gl, gltf, buffers, mesh, 'TEXCOORD_0'),\r\n        joints: getBufferFromName(gl, gltf, buffers, mesh, 'JOINTS_0'),\r\n        weights: getBufferFromName(gl, gltf, buffers, mesh, 'WEIGHTS_0'),\r\n        material: mesh.primitives[0].material,\r\n    };\r\n};\r\nconst loadMaterial = (gl, material, path, images) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const dir = path.split('/').slice(0, -1).join('/');\r\n    let baseColorTexture = null;\r\n    let metallicRoughnessTexture = null;\r\n    let emissiveTexture = null;\r\n    let normalTexture = null;\r\n    let occlusionTexture = null;\r\n    let baseColorFactor = fromValues$2(1.0, 1.0, 1.0, 1.0);\r\n    let roughnessFactor = 0.0;\r\n    let metallicFactor = 1.0;\r\n    let emissiveFactor = fromValues$3(1.0, 1.0, 1.0);\r\n    const pbr = material.pbrMetallicRoughness;\r\n    if (pbr) {\r\n        if (pbr.baseColorTexture) {\r\n            const uri = images[pbr.baseColorTexture.index].uri;\r\n            baseColorTexture = yield getTexture(gl, `${dir}/${uri}`);\r\n        }\r\n        if (pbr.baseColorFactor) {\r\n            baseColorFactor = fromValues$2(pbr.baseColorFactor[0], pbr.baseColorFactor[1], pbr.baseColorFactor[2], pbr.baseColorFactor[3]);\r\n        }\r\n        if (pbr.metallicRoughnessTexture) {\r\n            const uri = images[pbr.metallicRoughnessTexture.index].uri;\r\n            metallicRoughnessTexture = yield getTexture(gl, `${dir}/${uri}`);\r\n        }\r\n        metallicFactor = pbr.metallicFactor !== undefined ? pbr.metallicFactor : 1.0;\r\n        roughnessFactor = pbr.roughnessFactor !== undefined ? pbr.roughnessFactor : 1.0;\r\n    }\r\n    if (material.emissiveTexture) {\r\n        const uri = images[material.emissiveTexture.index].uri;\r\n        emissiveTexture = yield getTexture(gl, `${dir}/${uri}`);\r\n    }\r\n    if (material.normalTexture) {\r\n        const uri = images[material.normalTexture.index].uri;\r\n        normalTexture = yield getTexture(gl, `${dir}/${uri}`);\r\n    }\r\n    if (material.occlusionTexture) {\r\n        const uri = images[material.occlusionTexture.index].uri;\r\n        occlusionTexture = yield getTexture(gl, `${dir}/${uri}`);\r\n    }\r\n    if (material.emissiveFactor) {\r\n        emissiveFactor = fromValues$3(material.emissiveFactor[0], material.emissiveFactor[1], material.emissiveFactor[2]);\r\n    }\r\n    return {\r\n        baseColorTexture,\r\n        baseColorFactor,\r\n        metallicRoughnessTexture,\r\n        metallicFactor,\r\n        roughnessFactor,\r\n        emissiveTexture,\r\n        emissiveFactor,\r\n        normalTexture,\r\n        occlusionTexture,\r\n    };\r\n});\r\n/**\r\n * Loads a GLTF model and its assets\r\n * @param gl Web GL context\r\n * @param uri URI to model\r\n */\r\nconst loadModel = (gl, uri) => __awaiter(void 0, void 0, void 0, function* () {\r\n    var _a;\r\n    const response = yield fetch(uri);\r\n    const gltf = yield response.json();\r\n    if (gltf.accessors === undefined || gltf.accessors.length === 0) {\r\n        throw new Error('GLTF File is missing accessors');\r\n    }\r\n    const buffers = yield Promise.all(gltf.buffers.map((b) => __awaiter(void 0, void 0, void 0, function* () { return yield getBuffer(uri, b.uri); })));\r\n    const scene = gltf.scenes[gltf.scene || 0];\r\n    const meshes = gltf.meshes.map(m => loadMesh(gl, gltf, m, buffers));\r\n    const materials = gltf.materials ? yield Promise.all(gltf.materials.map((m) => __awaiter(void 0, void 0, void 0, function* () { return yield loadMaterial(gl, m, uri, gltf.images); }))) : [];\r\n    const rootNode = scene.nodes[0];\r\n    const nodes = gltf.nodes.map((n, i) => loadNodes(i, n));\r\n    const animations = {};\r\n    (_a = gltf.animations) === null || _a === void 0 ? void 0 : _a.forEach(anim => animations[anim.name] = loadAnimation(gltf, anim, buffers));\r\n    const skins = gltf.skins ? gltf.skins.map(x => {\r\n        const bindTransforms = readBufferFromFile(gltf, buffers, gltf.accessors[x.inverseBindMatrices]);\r\n        const inverseBindTransforms = x.joints.map((_, i) => createMat4FromArray(bindTransforms.data.slice(i * 16, i * 16 + 16)));\r\n        return {\r\n            joints: x.joints,\r\n            inverseBindTransforms,\r\n        };\r\n    }) : [];\r\n    const name = uri.split('/').slice(-1)[0];\r\n    return {\r\n        name,\r\n        meshes,\r\n        nodes,\r\n        rootNode,\r\n        animations,\r\n        skins,\r\n        materials,\r\n    };\r\n});\r\n/**\r\n * Deletes GL buffers and textures\r\n * @param gl Web GL context\r\n * @param model Model to dispose\r\n */\r\nconst dispose = (gl, model) => {\r\n    model.meshes.forEach(m => {\r\n        gl.deleteBuffer(m.indices);\r\n        if (m.joints)\r\n            gl.deleteBuffer(m.joints.buffer);\r\n        if (m.normals)\r\n            gl.deleteBuffer(m.normals.buffer);\r\n        if (m.positions)\r\n            gl.deleteBuffer(m.positions.buffer);\r\n        if (m.tangents)\r\n            gl.deleteBuffer(m.tangents.buffer);\r\n        if (m.texCoord)\r\n            gl.deleteBuffer(m.texCoord.buffer);\r\n        if (m.weights)\r\n            gl.deleteBuffer(m.weights.buffer);\r\n        m.indices = null;\r\n        m.joints = null;\r\n        m.normals = null;\r\n        m.tangents = null;\r\n        m.texCoord = null;\r\n        m.weights = null;\r\n    });\r\n    model.materials.forEach(m => {\r\n        if (m.baseColorTexture)\r\n            gl.deleteTexture(m.baseColorTexture);\r\n        if (m.emissiveTexture)\r\n            gl.deleteTexture(m.emissiveTexture);\r\n        if (m.normalTexture)\r\n            gl.deleteTexture(m.normalTexture);\r\n        if (m.occlusionTexture)\r\n            gl.deleteTexture(m.occlusionTexture);\r\n        if (m.metallicRoughnessTexture)\r\n            gl.deleteTexture(m.metallicRoughnessTexture);\r\n        m.baseColorTexture = null;\r\n        m.emissiveTexture = null;\r\n        m.normalTexture = null;\r\n        m.occlusionTexture = null;\r\n        m.metallicRoughnessTexture = null;\r\n    });\r\n};\n\nconst getPreviousAndNextKeyFrame = (keyFrames, animationTime) => {\r\n    let next = keyFrames[0];\r\n    let previous = keyFrames[0];\r\n    for (let i = 1; i < keyFrames.length; i++) {\r\n        next = keyFrames[i];\r\n        if (next.time > animationTime)\r\n            break;\r\n        previous = keyFrames[i];\r\n    }\r\n    return { previous, next };\r\n};\r\nconst getTransform = (keyFrames, duration) => {\r\n    if (keyFrames.length === 1) {\r\n        switch (keyFrames[0].type) {\r\n            case 'translation':\r\n            case 'scale':\r\n                return keyFrames[0].transform;\r\n            case 'rotation':\r\n                return keyFrames[0].transform;\r\n        }\r\n    }\r\n    const animationTime = duration / 1000.0 % keyFrames[keyFrames.length - 1].time;\r\n    const frames = getPreviousAndNextKeyFrame(keyFrames, animationTime);\r\n    const progression = (animationTime - frames.previous.time) / (frames.next.time - frames.previous.time);\r\n    switch (frames.previous.type) {\r\n        case 'translation':\r\n        case 'scale': {\r\n            const result = create$1();\r\n            lerp(result, frames.previous.transform, frames.next.transform, progression);\r\n            return result;\r\n        }\r\n        case 'rotation': {\r\n            const result = create$2();\r\n            slerp(result, frames.previous.transform, frames.next.transform, progression);\r\n            return result;\r\n        }\r\n    }\r\n};\r\nconst get = (c, elapsed) => {\r\n    const t = c && c.translation.length > 0 ? getTransform(c.translation, elapsed) : create$1();\r\n    const r = c && c.rotation.length > 0 ? getTransform(c.rotation, elapsed) : create$2();\r\n    const s = c && c.scale.length > 0 ? getTransform(c.scale, elapsed) : fromValues$3(1, 1, 1);\r\n    return { t, r, s };\r\n};\r\nconst applyTransform = (model, appliedTransforms, transforms, matrix, skin, nodeIndex, inverse) => {\r\n    const node = model.nodes[nodeIndex];\r\n    const transformIndex = skin.joints.indexOf(node.id);\r\n    if (transforms[node.id] !== undefined) {\r\n        multiply(matrix, matrix, transforms[node.id]);\r\n    }\r\n    if (inverse) {\r\n        const ibt = skin.inverseBindTransforms[transformIndex];\r\n        if (ibt) {\r\n            appliedTransforms[transformIndex] = create();\r\n            multiply(appliedTransforms[transformIndex], matrix, ibt);\r\n        }\r\n    }\r\n    else {\r\n        appliedTransforms[transformIndex] = matrix;\r\n    }\r\n    node.children.forEach(childNode => {\r\n        applyTransform(model, appliedTransforms, transforms, clone(matrix), skin, childNode, inverse);\r\n    });\r\n};\r\n/**\r\n * Blends two animations and returns their transform matrices\r\n * @param model GLTF Model\r\n * @param activeAnimations Currently running animations\r\n * @param blendTime Length of animation blend in milliseconds\r\n */\r\nconst getAnimationTransforms = (model, activeAnimations, blendTime = 0) => {\r\n    const transforms = {};\r\n    Object.keys(activeAnimations).forEach(track => {\r\n        activeAnimations[track].forEach(rootAnimation => {\r\n            const blend = -((rootAnimation.elapsed - blendTime) / blendTime);\r\n            Object.keys(model.animations[rootAnimation.key]).forEach(c => {\r\n                const transform = get(model.animations[rootAnimation.key][c], rootAnimation.elapsed);\r\n                activeAnimations[track].forEach(ac => {\r\n                    if (rootAnimation.key == ac.key || blend <= 0)\r\n                        return;\r\n                    const cTransform = get(model.animations[ac.key][c], ac.elapsed);\r\n                    lerp(transform.t, transform.t, cTransform.t, blend);\r\n                    slerp(transform.r, transform.r, cTransform.r, blend);\r\n                    lerp(transform.s, transform.s, cTransform.s, blend);\r\n                });\r\n                const localTransform = create();\r\n                const rotTransform = create();\r\n                fromQuat(rotTransform, transform.r);\r\n                translate(localTransform, localTransform, transform.t);\r\n                multiply(localTransform, localTransform, rotTransform);\r\n                scale(localTransform, localTransform, transform.s);\r\n                transforms[c] = localTransform;\r\n            });\r\n        });\r\n    });\r\n    return transforms;\r\n};\r\n/**\r\n * Applies transforms to skin\r\n * @param model GLTF Model\r\n * @param transforms Raw transforms\r\n * @param blendTime Use inverse bind transform\r\n */\r\nconst applyToSkin = (model, transforms, inverse = true) => {\r\n    const appliedTransforms = [];\r\n    model.skins.forEach(skin => {\r\n        const root = model.rootNode;\r\n        applyTransform(model, appliedTransforms, transforms, create(), skin, root, inverse);\r\n    });\r\n    return appliedTransforms;\r\n};\n\nconst activeAnimations = {};\r\nconst getAnimationFromLast = (track, key, offset = 0) => {\r\n    if (activeAnimations[track] === undefined || activeAnimations[track][key] === undefined || activeAnimations[track][key].length - offset - 1 < 0) {\r\n        return null;\r\n    }\r\n    return activeAnimations[track][key][activeAnimations[track][key].length - offset - 1];\r\n};\r\n/**\r\n * Sets the active animation\r\n * @param track Animation track\r\n * @param key Animation set key\r\n * @param model GLTF Model\r\n * @param animation Animation key\r\n */\r\nconst pushAnimation = (track, key, model, animation) => {\r\n    var _a;\r\n    const k = `${key}_${model}`;\r\n    if (!activeAnimations[track])\r\n        activeAnimations[track] = [];\r\n    if (!activeAnimations[track][k])\r\n        activeAnimations[track][k] = [];\r\n    if (((_a = getAnimationFromLast(track, k)) === null || _a === void 0 ? void 0 : _a.key) === animation)\r\n        return;\r\n    activeAnimations[track][k].push({\r\n        key: animation,\r\n        elapsed: 0,\r\n    });\r\n    activeAnimations[track][k].slice(activeAnimations[track][k].length - 2);\r\n};\r\n/**\r\n * Gets the current and previous animation\r\n * @param key Animation set key\r\n * @param model GLTF Model\r\n */\r\nconst getActiveAnimations = (key, model) => {\r\n    const k = `${key}_${model}`;\r\n    const aa = {};\r\n    if (Object.keys(activeAnimations).length === 0)\r\n        return null;\r\n    Object.keys(activeAnimations).forEach(c => {\r\n        if (!activeAnimations[c][k])\r\n            return;\r\n        aa[c] = activeAnimations[c][k].slice(activeAnimations[c][k].length - 2);\r\n    });\r\n    return aa;\r\n};\r\n/**\r\n * Advances the animation\r\n * @param elapsed Time elasped since last update\r\n * @param key Animation set key\r\n */\r\nconst advanceAnimation = (elapsed, key) => {\r\n    Object.keys(activeAnimations).forEach(c => {\r\n        Object.keys(activeAnimations[c]).forEach(m => {\r\n            if (key && m.indexOf(key) !== 0)\r\n                return;\r\n            const current = getAnimationFromLast(c, m);\r\n            const previous = getAnimationFromLast(c, m, 1);\r\n            if (current)\r\n                current.elapsed += elapsed;\r\n            if (previous)\r\n                previous.elapsed += elapsed;\r\n        });\r\n    });\r\n};\n\nexport { advanceAnimation, applyToSkin, dispose, getActiveAnimations, getAnimationTransforms, loadModel, pushAnimation };\n", "import * as GLTFPlugin from \"../../../../_snowpack/pkg/webgl-gltf.js\";\nexport default class GLTFImporter {\n  constructor(gl) {\n    this.gl = gl;\n  }\n  async LoadAsset(filePath) {\n    return await GLTFPlugin.loadModel(this.gl, filePath);\n  }\n}\n", "import {DefaultVertexShaderParameter} from \"../Material/MaterialTypes.js\";\nimport {GetDefaultMaterialConfig} from \"../Material/MaterialHelper.js\";\nimport ShapeObject from \"./ShapeObject.js\";\nimport GLTFShapeObject from \"./GLTFShapeObject.js\";\nimport Transform from \"../Transform/Transform.js\";\nimport {GLProgramIDs} from \"../../Utility/KatachiStringSet.js\";\nimport {RandomChar} from \"../../Utility/UtilityMethod.js\";\nimport {vec3} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nimport GLTFImporter from \"../AssetImporter/GLTFImporter.js\";\nclass ShapeBuilder {\n  constructor(gl, materialManager, meshManager) {\n    this._gl = gl;\n    this._materialManager = materialManager;\n    this._meshManager = meshManager;\n    this.gltfImporter = new GLTFImporter(gl);\n  }\n  Build(shapeName, mesh, material) {\n    let transform = new Transform(vec3.create(), vec3.create(), vec3.fromValues(1, 1, 1));\n    let shapeObject = new ShapeObject(transform, mesh, material);\n    shapeObject.name = shapeName;\n    shapeObject.id = RandomChar(11);\n    let defaultMatConfig = GetDefaultMaterialConfig(this._gl);\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.vertex].value = mesh.meshData.vertex;\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.uv].value = mesh.meshData.uv;\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.normal].value = mesh.meshData.normal;\n    material.PreloadProperties(this._gl, defaultMatConfig);\n    return shapeObject;\n  }\n  BuildQuad() {\n    let mesh = this._meshManager.CreateQuad();\n    let shaderSet = this._materialManager.GetGlShaderSet(GLProgramIDs.Standard);\n    let material = this._materialManager.CreateMaterial(shaderSet.vertShader, shaderSet.fragShader);\n    return this.Build(\"Quad\", mesh, material);\n  }\n  BuildCube() {\n    let mesh = this._meshManager.CreateCube();\n    let shaderSet = this._materialManager.GetGlShaderSet(GLProgramIDs.Standard);\n    let material = this._materialManager.CreateMaterial(shaderSet.vertShader, shaderSet.fragShader);\n    return this.Build(\"Cube\", mesh, material);\n  }\n  async BuildGLTFShape(gltfID, gltfPath) {\n    const gltfModel = await this.gltfImporter.LoadAsset(gltfPath);\n    console.log(gltfModel);\n    const gltfmesh = gltfModel.meshes[0];\n    let fakeMesh = this._meshManager.CreateNull(gltfID);\n    fakeMesh.meshData.vertexCount = gltfmesh.elementCount * 3;\n    fakeMesh.meshData.glBufferIndices = gltfmesh.indices;\n    fakeMesh.meshData.glBufferVertex = gltfmesh.positions.buffer;\n    fakeMesh.meshData.glBufferNormal = gltfmesh.normals.buffer;\n    fakeMesh.meshData.glBufferUV = gltfmesh.texCoord.buffer;\n    let shaderSet = this._materialManager.GetGlShaderSet(GLProgramIDs.Standard);\n    let material = this._materialManager.CreateMaterial(shaderSet.vertShader, shaderSet.fragShader);\n    let transform = new Transform(vec3.create(), vec3.create(), vec3.fromValues(1, 1, 1));\n    let shapeObject = new GLTFShapeObject(transform, fakeMesh, material, gltfModel);\n    shapeObject.name = gltfModel.name;\n    shapeObject.id = gltfID;\n    let defaultMatConfig = GetDefaultMaterialConfig(this._gl);\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.vertex].value = gltfmesh.positions.buffer;\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.uv].value = gltfmesh.texCoord.buffer;\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.normal].value = gltfmesh.normals.buffer;\n    defaultMatConfig.attributes[DefaultVertexShaderParameter.tangent].value = gltfmesh.tangents.buffer;\n    if (gltfModel.materials.length > 0) {\n      defaultMatConfig.texture[0].textureBuffer = gltfModel.materials[0].baseColorTexture;\n      defaultMatConfig.texture[1].textureBuffer = gltfModel.materials[0].normalTexture;\n    }\n    shapeObject.SetCustomUniformAttr(\"u_mainColor\", {value: [1, 1, 1, 1], isMatrix: false, function: this._gl.uniform4fv});\n    material.PreloadProperties(this._gl, defaultMatConfig);\n    return shapeObject;\n  }\n}\nexport default ShapeBuilder;\n", "import {mat4, vec3} from \"../../../_snowpack/pkg/gl-matrix.js\";\nexport var ProjectionType;\n(function(ProjectionType2) {\n  ProjectionType2[ProjectionType2[\"Orthographic\"] = 0] = \"Orthographic\";\n  ProjectionType2[ProjectionType2[\"Perspective\"] = 1] = \"Perspective\";\n})(ProjectionType || (ProjectionType = {}));\n;\nexport class Projection {\n  constructor(transform, projectionType) {\n    this.farClipPoint = 15;\n    this.nearClipPoint = 0.3;\n    this._foxyPerspective = 60;\n    this._sizeOrtho = 3;\n    this.transform = transform;\n    this.lookUpPoint = vec3.create();\n    this.upDirMatrix = vec3.fromValues(0, 1, 0);\n    this._viewMatrix = mat4.create();\n    this._projectionMatrix = mat4.create();\n    this._spaceMatrix = mat4.create();\n    this.projectionType = projectionType;\n  }\n  get projectionMatrix() {\n    return this._projectionMatrix;\n  }\n  get viewMatrix() {\n    let v = this.transform.transformVector.UpdateTransformVector(this.transform.rotation);\n    vec3.add(this.lookUpPoint, this.transform.position, v.forward);\n    return mat4.lookAt(this._viewMatrix, this.transform.position, this.lookUpPoint, this.upDirMatrix);\n  }\n  get spaceMatrix() {\n    return mat4.mul(this._spaceMatrix, this.projectionMatrix, this.viewMatrix);\n  }\n  set projectionType(t) {\n    this._projectionType = t;\n    this.UpdateProjectionMatrix();\n  }\n  set aspectRatio(aspect) {\n    this._aspectRatio = aspect;\n    this.UpdateProjectionMatrix();\n  }\n  set sizeOrtho(size) {\n    this._sizeOrtho = size;\n    this.UpdateProjectionMatrix();\n  }\n  set foxyPerspective(foxy) {\n    this._foxyPerspective = foxy;\n    this.UpdateProjectionMatrix();\n  }\n  UpdateProjectionMatrix() {\n    if (this._projectionType == 0)\n      this._projectionMatrix = this.GetOrthographicMatrix(-this._sizeOrtho * this._aspectRatio, this._sizeOrtho * this._aspectRatio, -this._sizeOrtho, this._sizeOrtho, this.nearClipPoint, this.farClipPoint);\n    else\n      this._projectionMatrix = this.GetPerspectiveMatrix(this._foxyPerspective, this._aspectRatio, this.nearClipPoint, this.farClipPoint);\n    return this._projectionMatrix;\n  }\n  GetOrthographicMatrix(left, right, bottom, top, near, far) {\n    return mat4.ortho(this._projectionMatrix, left, right, bottom, top, near, far);\n  }\n  GetPerspectiveMatrix(foxy, aspectRatio, near, far) {\n    foxy = foxy * (Math.PI / 180);\n    return mat4.perspective(this._projectionMatrix, foxy, aspectRatio, near, far);\n  }\n}\n", "import ObjectInterface from \"../Object.js\";\nimport {RandomChar} from \"../../Utility/UtilityMethod.js\";\nimport {Projection, ProjectionType} from \"../Projection.js\";\nclass Camera extends ObjectInterface {\n  constructor() {\n    super();\n    this.id = RandomChar(8);\n    this.name = \"MainCamera\";\n    this.transform.SetEuler(1.5 * Math.PI, 0, 0);\n    this.projection = new Projection(this.transform, ProjectionType.Perspective);\n  }\n}\nexport default Camera;\n", "import {vec3, vec4} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nimport ObjectInterface from \"../Object.js\";\nimport {Projection, ProjectionType} from \"../Projection.js\";\nexport default class DirectionLight extends ObjectInterface {\n  constructor() {\n    super();\n    this.cachePosition = vec3.create();\n    this.color = vec4.fromValues(1, 1, 1, 1);\n    this.offsetPostion = vec3.fromValues(3, 9, 3);\n    this.transform.SetEuler(Math.PI * 0.3, Math.PI * 1.35, 0);\n    this.transform.transformVector.UpdateTransformVector(this.transform.rotation);\n    this.projection = new Projection(this.transform, ProjectionType.Orthographic);\n    this.projection.sizeOrtho = 6;\n  }\n}\n", "import {vec3, vec4} from \"../../../../_snowpack/pkg/gl-matrix.js\";\nimport DirectionLight from \"./DirectionLight.js\";\nexport default class Light {\n  constructor() {\n    this.directionLigth = new DirectionLight();\n    this.ambient_light = vec4.fromValues(0.3, 0.3, 0.3, 1);\n  }\n  SyncLightRelativePosToCamera(cameraTransform) {\n    vec3.add(this.directionLigth.cachePosition, this.directionLigth.offsetPostion, cameraTransform.position);\n    this.directionLigth.transform.SetPosition(this.directionLigth.cachePosition[0], this.directionLigth.offsetPostion[1], this.directionLigth.cachePosition[2]);\n  }\n}\n", "import Camera from \"./Camera/Camera.js\";\nimport Light from \"./Light/Light.js\";\nclass Scene {\n  get shapeArray() {\n    return this._shapeArray;\n  }\n  constructor() {\n    this._shapeArray = [];\n    this.camera = new Camera();\n    this.lights = new Light();\n  }\n  AddShapeObj(shapeObject) {\n    this._shapeArray.push(shapeObject);\n  }\n  RemoveShapeObj(id) {\n    let index = this._shapeArray.findIndex((x) => x.id = id);\n    if (index >= 0)\n      this._shapeArray.splice(index, 1);\n  }\n  SetParent(parentObject, childObject) {\n    childObject.transform.SetParent(parentObject.transform);\n    if (parentObject == null)\n      return;\n    let parentIndex = this._shapeArray.findIndex((x) => x.id = parentObject.id);\n    if (parentIndex >= 0) {\n      this.RemoveShapeObj(childObject.id);\n      this._shapeArray.splice(parentIndex + 1, 0, childObject);\n    }\n  }\n}\nexport default Scene;\n", "import {DefaultVertexShaderParameter} from \"../Component/Material/MaterialTypes.js\";\nimport {GLProgramIDs} from \"../Utility/KatachiStringSet.js\";\nimport {GetDefaultMaterialConfig} from \"../Component/Material/MaterialHelper.js\";\nclass WebGLDepthBuffer {\n  get depthMapTex() {\n    return this._depthMapTex;\n  }\n  get colorDepthMapTex() {\n    return this._colorDepthMapTex;\n  }\n  get depthFrameBuffer() {\n    return this._depthFrameBuffer;\n  }\n  get depthMaterial() {\n    return this._depthMaterial;\n  }\n  constructor(gl, webglResouceAlloc, materialManager) {\n    this.gl = gl;\n    this.webglResouceAlloc = webglResouceAlloc;\n    this.materialManager = materialManager;\n  }\n  CacheDepthMaterial() {\n    let glShaderSet = this.materialManager.GetGlShaderSet(GLProgramIDs.DepthMap);\n    this._depthMaterial = this.materialManager.CreateMaterial(glShaderSet.vertShader, glShaderSet.fragShader);\n    let defaultMatConfig = GetDefaultMaterialConfig(this.gl);\n    this._depthMaterial.PreloadProperties(this.gl, defaultMatConfig);\n  }\n  PrepareDepthFrameBuffer(width, height) {\n    let gl = this.gl;\n    this._colorDepthMapTex = this.webglResouceAlloc.CreateGLTexture(gl, width, height, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    this._depthMapTex = this.webglResouceAlloc.CreateGLTexture(gl, width, height, gl.DEPTH_COMPONENT, gl.UNSIGNED_INT, null);\n    this._depthFrameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._depthFrameBuffer);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this._colorDepthMapTex, 0);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, this._depthMapTex, 0);\n    this.webglResouceAlloc.SaveGlobalTextureSource(DefaultVertexShaderParameter.depthMapTexture, this._depthMapTex, gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n}\nexport default WebGLDepthBuffer;\n", "import WebglCanvas from \"./WebGL/WebglCanvas.js\";\nimport WebglResource from \"./WebGL/WebglResource.js\";\nimport MaterialManager from \"./Component/Material/MaterialManager.js\";\nimport MeshManager from \"./Component/Mesh/MeshManager.js\";\nimport ShapeBuilder from \"./Component/Shape/ShapeBuilder.js\";\nimport Scene from \"./Component/Scene.js\";\nimport {vec2} from \"../../_snowpack/pkg/gl-matrix.js\";\nimport WebGLDepthBuffer from \"./WebGL/WebGLDepthBuffer.js\";\nclass Katachi extends WebglCanvas {\n  constructor(configJson) {\n    super(configJson);\n    this.previousTimeStamp = 0;\n    this.targetTextureWidth = 512;\n    this.targetTextureHeight = 512;\n    this.targetTextureTexel = vec2.fromValues(1 / this.targetTextureWidth, 1 / this.targetTextureHeight);\n    this.configJson = configJson;\n    this.webglResouceAlloc = new WebglResource();\n    this.materialManager = new MaterialManager(this._gl, this.webglResouceAlloc);\n    this.meshManager = new MeshManager();\n    this.shapeBuilder = new ShapeBuilder(this._gl, this.materialManager, this.meshManager);\n    this.webglDepthBuffer = new WebGLDepthBuffer(this._gl, this.webglResouceAlloc, this.materialManager);\n    this.scene = new Scene();\n  }\n  get isKatachiValid() {\n    return this._gl != null;\n  }\n  async SetUp(UpdateLoopCallback) {\n    if (!this.isKatachiValid)\n      return false;\n    this.UpdateLoopCallback = UpdateLoopCallback;\n    await this.materialManager.LoadAndPrepareShaders(this.configJson.shaders);\n    this.webglDepthBuffer.PrepareDepthFrameBuffer(this.targetTextureWidth, this.targetTextureHeight);\n    this.webglDepthBuffer.CacheDepthMaterial();\n    window.requestAnimationFrame(this.PerformGameLoop.bind(this));\n    return true;\n  }\n  PerformGameLoop(timeStamp) {\n    let ms = (timeStamp - this.previousTimeStamp) / 1e3;\n    this.time = timeStamp / 1e3;\n    this.previousTimeStamp = timeStamp;\n    if (this.UpdateLoopCallback != null)\n      this.UpdateLoopCallback(this.time);\n    if (this.scene.lights != null && this.time % 0.5 > 0.45)\n      this.scene.lights.SyncLightRelativePosToCamera(this.scene.camera.transform);\n    this.DrawCanvas(this.webglDepthBuffer.depthFrameBuffer, this.webglDepthBuffer.depthMaterial, this.scene.lights.directionLigth.projection, this.targetTextureWidth, this.targetTextureHeight);\n    this.DrawCanvas(null, null, this.scene.camera.projection, this._gl.canvas.width, this._gl.canvas.height);\n    window.requestAnimationFrame(this.PerformGameLoop.bind(this));\n  }\n  DrawCanvas(frameBuffer, defaultMaterial, projection, canvasWidth, canvasHeight) {\n    let gl = this._gl;\n    this.currentFrameBuffer = frameBuffer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    gl.viewport(0, 0, canvasWidth, canvasHeight);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    projection.aspectRatio = canvasWidth / canvasHeight;\n    let cameraViewMatrix = projection.viewMatrix;\n    let cameraProjectionMatrix = projection.projectionMatrix;\n    for (var shapeID in this.scene.shapeArray) {\n      let shapeObject = this.scene.shapeArray[shapeID];\n      this.ProcessShapeObject(shapeObject, cameraViewMatrix, cameraProjectionMatrix, defaultMaterial);\n    }\n  }\n  ProcessShapeObject(shapeObject, viewMatrix, projectionMatrix, defaultMaterial) {\n    let material = defaultMaterial == null ? shapeObject.material : defaultMaterial;\n    this._gl.useProgram(material.glProgram);\n    shapeObject.transform.UpdateModelMatrix();\n    const mvpMatrix = shapeObject.GetMVPMatrix(viewMatrix, projectionMatrix);\n    shapeObject.ProcessMaterialAttr(this._gl, material);\n    shapeObject.ProcessMaterialUniform(this._gl, material, this.time, shapeObject.transform.modelMatrix, shapeObject.transform.InverseTransposeMatrix, mvpMatrix, this.scene.lights, this.currentFrameBuffer == null ? this.webglDepthBuffer.depthMapTex : null, this.targetTextureTexel);\n    var primitiveType = this._gl.TRIANGLES;\n    var offset = 0;\n    var count = shapeObject.mesh.vertCount;\n    if (shapeObject.mesh.meshData.glBufferIndices) {\n      this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, shapeObject.mesh.meshData.glBufferIndices);\n      this._gl.drawElements(primitiveType, count, this._gl.UNSIGNED_SHORT, 0);\n    } else if (shapeObject.mesh.meshData.glBufferIndices == null) {\n      this._gl.drawArrays(primitiveType, offset, count);\n    }\n  }\n}\nexport default Katachi;\n", "import \"./stylesheet/main.css\";\nimport SampleScene from \"./Sample/KatachiBasicDemo.js\";\nimport Katachi from \"./Katachi/Katachi.js\";\nwindow.onload = () => {\n  let katachi_config_promise = fetch(\"./Dataset/katachi_basic_layout.json\");\n  let sample_config_promise = fetch(\"./Dataset/sample_scene_layout.json\");\n  Promise.all([katachi_config_promise, sample_config_promise]).then((values) => {\n    return Promise.all(values.map((x) => x.json()));\n  }).then(function(jsonArray) {\n    let katachi = new Katachi(jsonArray[0]);\n    let officialSampleScene = new SampleScene();\n    officialSampleScene.SetUp(katachi, jsonArray[1]);\n  });\n};\n"],
  "mappings": "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",
  "names": []
}
